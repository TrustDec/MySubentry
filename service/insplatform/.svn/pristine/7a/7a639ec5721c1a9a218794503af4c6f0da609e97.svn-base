package com.insplatform.module.osta.register.demand.controller;

import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.insframework.system.base.controller.BaseController;
import com.insframework.system.curruser.CurrentUser;
import com.insframework.system.map.Condition;
import com.insplatform.module.osta.register.demand.model.OstaRegDemandWriteWork;
import com.insplatform.module.osta.register.demand.service.OstaRegDemandWriteWorkService;

@Controller
@RequestMapping("/px/ostaregdemandwritework")
public class OstaRegDemandWriteWorkController extends BaseController{
	
	@Autowired
	private OstaRegDemandWriteWorkService ostaRegDemandWriteWorkService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGridByApprover")
	public @ResponseBody Map<String, Object> loadAllGridByApprover(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"demandId","operType","userName","idCard","companyName","loadType");
		return ostaRegDemandWriteWorkService.loadAllGridByApprover(condition);
	}
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/loadByApprover")
	public @ResponseBody Map<String, Object> loadByApprover(@RequestParam("id") String id){		
		return this.getMessager().success().data(ostaRegDemandWriteWorkService.loadByApprover(id));		
	}

	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"pid","worktypeclassName","worktypeName","trainingLevelName");
		return ostaRegDemandWriteWorkService.loadAllGrid(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(ostaRegDemandWriteWorkService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(ostaRegDemandWriteWorkService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(OstaRegDemandWriteWork ostaregdemandwritework, HttpServletRequest request){
		CurrentUser user = this.getCurrentUser(request);
		ostaregdemandwritework.setCreateUserId(user.getId());
		ostaregdemandwritework.setCreateUserName(user.getName());
		ostaregdemandwritework.setCreateTime(new Date());
		Map<String, Object> map = ostaRegDemandWriteWorkService.mySave(ostaregdemandwritework);
		return this.getMessager().success().putAllMap(map);
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){
		OstaRegDemandWriteWork ostaevaldemandwritework = ostaRegDemandWriteWorkService.get(id);
		this.bindObject(request, ostaevaldemandwritework);
		ostaRegDemandWriteWorkService.update(ostaevaldemandwritework);
		return this.getMessager().success().put("resultId", id);
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		Map<String, Object> map = ostaRegDemandWriteWorkService.deleteByIdsx(ids);
		return this.getMessager().success().putAllMap(map);
	}
	
	/**
	 * 员工发送审批
	 * @param request
	 * @return
	 */
	@RequestMapping("/sendApprovalStatus")	
	public @ResponseBody Map<String, Object> sendApprovalStatus(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		Map<String, Object> map =ostaRegDemandWriteWorkService.updateApprovalNode(ids,10);
		return this.getMessager().success().putAllMap(map);
	}
	
	/**
	 * 审批通过
	 * @param request
	 * @return
	 */
	@RequestMapping("/approvalPass")	
	public @ResponseBody Map<String, Object> approvalPass(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		String operType = request.getParameter("operType");
		Map<String, Object> map =ostaRegDemandWriteWorkService.approvalPass(ids,operType);
		return this.getMessager().success().putAllMap(map);
	}
	
	/**
	 * 审批不通过
	 * @param request
	 * @return
	 */
	@RequestMapping("/approvalNoPass")	
	public @ResponseBody Map<String, Object> approvalNoPass(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		String operType = request.getParameter("operType");
		Map<String, Object> map =ostaRegDemandWriteWorkService.approvalNoPass(ids,operType);
		return this.getMessager().success().putAllMap(map);
	}
	
}
