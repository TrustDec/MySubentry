package com.insplatform.module.examination.controller;

import java.io.Serializable;
import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.insframework.common.utils.TextUtil;
import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.examination.model.Examination;
import com.insplatform.module.examination.service.ExaminationService;
import com.insplatform.module.examination.service.ExaminationUserService;

@Controller
@RequestMapping("/px/examination")
public class ExaminationController extends BaseController{
	
	@Autowired
	private ExaminationService examinationService;
	
	@Autowired
	private ExaminationUserService examinationUserService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"name","pxTestPaper");
		return examinationService.loadAllGrid(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(examinationService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(examinationService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(Examination examination, HttpServletRequest request){
		Condition condition = this.getCondition(request);
		String pxClassReportId=request.getParameter("pxClassReportId");
		examination.setEffectiveTimes(1);
		Condition c = this.getCondition(request);
		examination.setCreateTime(new Date());
		examination.setCreateUserId(c.getCurrentUser().getId());
		examination.setCreateUserName(c.getCurrentUser().getName());
		examination.setUpdateTime(new Date());
		examination.setPxClassReport(pxClassReportId);
		examination.setPxTestPaper(request.getParameter("pxTestPaperId"));
		examination.setPxType("培训科");
		examination.setExamintion_type("0");
		Serializable id=examinationService.save(examination);
		if(TextUtil.isNotEmpty(pxClassReportId))
		{
			examinationUserService.addMotion(id.toString(), pxClassReportId, condition);
		}
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){		
		Examination examination = examinationService.get(id);
		this.bindObject(request, examination);
		examination.setPxClassReport(request.getParameter("pxClassReportId"));
		examination.setPxTestPaper(request.getParameter("pxTestPaperId"));
		examination.setUpdateTime(new Date());
		examinationService.update(examination);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		examinationService.deleteByIds(ids);
		return this.getMessager().success();
	}
	
	/**
	 * 加载培训班
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadClassReportList")
	public @ResponseBody Map<String, Object> loadClassReportList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"name","pxYear","pxMonth","SelectPxProject");
		return examinationService.loadClassReportList(condition);
	}
	
	
	/**
	 * 加载试卷
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadTestPaperList")
	public @ResponseBody Map<String, Object> loadTestPaperList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"title","totalTopic","totalScore");
		return examinationService.loadTestPaperList(condition);
	}

	
}
