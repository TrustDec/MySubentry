package com.insplatform.module.trainbaseexamplace.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.trainbaseexamplace.model.TrainbaseExamRoom;
import com.insplatform.module.trainbaseexamplace.repository.TrainbaseExamRoomRepository;
import com.insplatform.module.trainbaseexamplace.service.TrainbaseExamRoomService;


@Service
public class TrainbaseExamRoomServiceImpl extends BaseServiceImpl<TrainbaseExamRoom> implements TrainbaseExamRoomService{
	
	@Autowired
	private TrainbaseExamRoomRepository trainbaseExamRoomRepository;

	@Override
	public BaseRepository<TrainbaseExamRoom> getRepository() {		
		return trainbaseExamRoomRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return trainbaseExamRoomRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return trainbaseExamRoomRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return trainbaseExamRoomRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainbaseExamRoom get(Serializable id) {		
		return trainbaseExamRoomRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainbaseExamRoom entity) {	
		return trainbaseExamRoomRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainbaseExamRoom entity) {		
		trainbaseExamRoomRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		trainbaseExamRoomRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		trainbaseExamRoomRepository.deleteByIds(ids);
	}

}
