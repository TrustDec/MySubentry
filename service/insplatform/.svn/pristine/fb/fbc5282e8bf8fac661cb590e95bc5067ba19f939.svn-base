package com.insplatform.module.video.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.insframework.component.service.file.UploadService;
import com.insframework.component.service.file.bean.FileBean;
import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.resource.service.ResourceService;
import com.insplatform.module.video.model.Video;
import com.insplatform.module.video.repository.VideoRepository;
import com.insplatform.module.video.service.VideoService;

@Service
public class VideoServiceImpl extends BaseServiceImpl<Video> implements VideoService{
	
	@Autowired
	private VideoRepository videoRepository;
	
	@Autowired
	private UploadService uploadService;
	
	@Autowired
	private ResourceService resourceService;

	@Override
	public BaseRepository<Video> getRepository() {		
		return videoRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return videoRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return videoRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return videoRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public Video get(Serializable id) {		
		return videoRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(Video video, HttpServletRequest request) {	
		MultipartFile file = uploadService.getMultipartFile(request, "file");
		video.setOriginalName(file.getOriginalFilename());
		FileBean fileBean = null;
		try {
			fileBean = uploadService.uploadByVideo(file);			
		} catch (Exception e) {		
			e.printStackTrace();
		}
		video.setVideo(fileBean.getUrl());
		return videoRepository.save(video);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(Video video, HttpServletRequest request) {	
		MultipartFile file = uploadService.getMultipartFile(request, "file");
		if(file != null && file.getSize() > 0){
			video.setOriginalName(file.getOriginalFilename());			
			FileBean fileBean = null;
			try {
				fileBean = uploadService.uploadByVideo(file);			
			} catch (Exception e) {		
				e.printStackTrace();
			}
			video.setVideo(fileBean.getUrl());			
		}
		videoRepository.update(video);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		videoRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		videoRepository.deleteByIds(ids);
		//删除关联信息
		resourceService.removeOthersByIds("VIDEO", ids);
	}

}
