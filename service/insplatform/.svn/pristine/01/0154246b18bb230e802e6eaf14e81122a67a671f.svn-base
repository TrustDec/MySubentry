package com.insplatform.module.course.course.service;

import java.util.*;

import javax.servlet.http.HttpServletRequest;


import com.insframework.system.base.service.BaseService;
import com.insframework.system.map.Condition;

import com.insplatform.module.course.course.model.Course;

public interface CourseService extends BaseService<Course>{
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	Map<String, Object> loadAllGrid(Condition condition);
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	List<Map<String, Object>> loadAllList(Condition condition);
	
	/**
	 * 加载单条数据
	 * @param request
	 * @param response
	 * @return
	 */
	Map<String, Object> load(String id);
	
	/**
	 * 加载单挑数据（模板应用）
	 * @param courseId
	 * @return
	 */
	Map<String, Object> loadByDetails(String courseId);
	
	/**
	 * 移动端获取课程详情
	 * @param courseId
	 * @return
	 */
	Map<String, Object> loadCourseDetailFromMobile(String courseId);

	/**
	 * 发布或取消发布
	 * @param courseId
	 * @param yOrN
	 */
	int updateReleaseCourse(String courseId, String yOrN);

	/**
	 * 课程button选择器
	 * @param condition
	 * @return
	 */
	Map<String, Object> loadAllChooser(Condition condition);
	
	/**
	 * 加载首页8个课程
	 * @return
	 */
	List<Map<String, Object>> loadHomeCourseList();
	
	/**
	 * 移动端加载首页8节课
	 * @return
	 */
	List<Map<String, Object>> loadHomeCourseFromMobile();
	
	/**
	 * 用户是否关学习了该课程
	 * @param userId
	 * @param courseId
	 * @return
	 */
	boolean hasStudyedCourse(String id, String courseId);
	
	/**
	 * 用户是否关注了该课程
	 * @param userId
	 * @param courseId
	 * @return
	 */
	boolean hasFocusCourse(String id, String courseId);
	
	
	/**
	 * 关注课程
	 * @param userId
	 * @param courseId
	 * @param type
	 */
	void updateFocuseCourse(String userId, String courseId, String type);
	
	
	/**
	 * 学习课程
	 * @param userId
	 * @param courseId
	 */
	void updateStudyedCourse(String userId, String courseId);
	
	/**
	 * 加载该课程的小伙伴学过的课程
	 * @param courseId
	 * @param userId
	 * @return
	 */
	List<Map<String, Object>> loadCourseOtherUserStudyed(String courseId,
			String userId);
	
	/**
	 * 加载课程列表模板数据
	 * @param request
	 * @return
	 */
	Map<String, Object> loadAllListTemplate(HttpServletRequest request);
	
	/**
	 * 移动端加载全部课程列表
	 * @param request
	 * @return
	 */
	Map<String, Object> loadAllListFromMobile(HttpServletRequest request,String userId);
	
	/**
	 * 移动端加载课程列表查询条件
	 * @param request
	 * @return
	 */
	Map<String, Object> loadListConditionFromMobile(String id,String tip);

	/**
	 * 获取可选择的工种
	 * @param condition
	 * @return
	 */
	Map<String, Object> loadAllWorkType(Condition condition);
	
	

}
