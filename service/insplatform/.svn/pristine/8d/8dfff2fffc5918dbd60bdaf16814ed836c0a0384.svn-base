package com.insplatform.system.organization.repository;

import java.util.List;
import java.util.Map;

import com.insframework.system.base.repository.BaseRepository;
import com.insplatform.system.organization.model.Organization;

import com.insframework.system.map.Condition;


public interface OrganizationRepository extends BaseRepository<Organization>{
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	List<Map<String, Object>> loadAll(Condition condition);
	
	/**
	 * 查询所有的父节点
	 * @param id
	 * @return
	 */
	List<Map<String, Object>> loadSupersByIdAsOracle(String id);
	
	/**
	 * 根据当前机构id向上查找所属公司（如果自己本身是公司，则返回自身）
	 * @param id
	 * @return
	 */
	Map<String, Object> loadSuperCompany(String id);
	
	
	/**
	 * 根据id数组加载数据
	 * @param ids
	 * @return
	 */
	List<Map<String, Object>> loadByIds(List<String> ids);
	
	/**
	 * 加载所有的子机构id集合(包括自身)
	 * @param id
	 * @return
	 */
	List<String> loadChildrenIds(String id);
	
	/**
	 * 将用户添加到机构中
	 * @param roleId
	 * @param userIds
	 */
	void addOrgUser(String id, String...userIds);
	
	/**
	 * 删除机构下的用户
	 * @param id
	 * @param userIds
	 */
	void deleteOrgUser(String id, String...userIds);	

	/**
	 * 检查机构下是否有用户
	 * @param orgId
	 * @param userId
	 * @return
	 */
	boolean orgHasUser(String orgId, String userId);
	
	/**
	 * 根据用户id获取机构
	 * @param userId
	 * @return
	 */
	Map<String, Object> loadUserOrg(String userId);
	
}
