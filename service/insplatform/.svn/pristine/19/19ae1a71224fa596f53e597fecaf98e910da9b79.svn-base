package com.insplatform.module.trainingimplement.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.trainingimplement.model.TrainingLeave;
import com.insplatform.module.trainingimplement.repository.TrainingLeaveRepository;
import com.insplatform.module.trainingimplement.service.TrainingLeaveService;

@Service
public class TrainingLeaveServiceImpl extends BaseServiceImpl<TrainingLeave>
		implements TrainingLeaveService {

	@Autowired
	private TrainingLeaveRepository TrainingLeaveRepository;

	@Override
	public BaseRepository<TrainingLeave> getRepository() {
		return TrainingLeaveRepository;
	}

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {
		return TrainingLeaveRepository.loadAllGrid(condition);
	}

	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {
		return TrainingLeaveRepository.loadAllList(condition);
	}

	@Override
	public Map<String, Object> load(String id) {
		return TrainingLeaveRepository.load(id);
	}

	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainingLeave get(Serializable id) {
		return TrainingLeaveRepository.get(id);
	}

	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainingLeave entity) {
		return TrainingLeaveRepository.save(entity);
	}

	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainingLeave entity) {
		TrainingLeaveRepository.update(entity);
	}

	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {
		TrainingLeaveRepository.deleteById(id);
	}

	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {
		TrainingLeaveRepository.deleteByIds(ids);
	}

	@Override
	public Serializable save(TrainingLeave TrainingLeave,
			HttpServletRequest request) {
		return TrainingLeaveRepository.save(TrainingLeave,request);
	}

	@Override
	public void update(TrainingLeave trainingLeave, HttpServletRequest request) {
		TrainingLeaveRepository.update(trainingLeave,request);
	}

}
