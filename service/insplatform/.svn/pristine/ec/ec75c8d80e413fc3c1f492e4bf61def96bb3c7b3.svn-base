package com.insplatform.module.kpoint.repository.impl;

import java.io.Serializable;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.kpoint.model.Kpoint;
import com.insplatform.module.kpoint.repository.KpointRepository;

@Repository
public class KpointRepositoryImpl extends BaseRepositoryImpl<Kpoint> implements KpointRepository{

	@Override
	public Map<String, Object> loadAll(Condition condition) {	
		String sql = "select t.*,t.name as text, t.parent_id as pid from PX_KPOINT t order by t.name ";
		return treeService.loadData(sql);		
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public Kpoint get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(Kpoint entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(Kpoint entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}
	
}
