package com.insplatform.module.osta.register.write.repository.impl;

import java.io.Serializable;
import java.util.*;

import org.springframework.stereotype.Repository;

import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insplatform.module.osta.register.write.model.OstaRegNoticeWrite;
import com.insplatform.module.osta.register.write.repository.OstaRegNoticeWriteRepository;

import com.insframework.system.map.Condition;


@Repository
public class OstaRegNoticeWriteRepositoryImpl extends BaseRepositoryImpl<OstaRegNoticeWrite> implements OstaRegNoticeWriteRepository{

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {	
		String sql = "select t.id, t.notice_id, t.stu_id, t.stu_name, t.stu_sex, " +
				" t.stu_idcard, t.stu_edu," +
				" t.osta_worktype_id, t.osta_worktype_name, t.osta_worktype_level_id," +
				" t.osta_worktype_level_name, t.remarks, create_user_id," +
				" t.create_user_name, t.create_time, t.update_time" +
				" from px_osta_reg_notice_write t" +
				" where 1=1";
//		Condition condition = this.getCondition(request,"stuName","stuIdcard",
//				"ostaWorktypeName","ostaWorktypeLevelName",
//				"createUserName","startCreateTime","endCreateTime");

		if (condition.containsKey("stuName")) {
			sql += " and t.stu_name like ?";
			condition.put("stuName","%"+condition.get("stuName")+"%");
		}
		if (condition.containsKey("stuIdcard")) {
			sql += " and t.stu_idcard like ?";
			condition.put("stuIdcard","%"+condition.get("stuIdcard")+"%");
		}
		if (condition.containsKey("ostaWorktypeName")) {
			sql += " and t.osta_worktype_name like ?";
			condition.put("ostaWorktypeName","%"+condition.get("ostaWorktypeName")+"%");
		}
		if (condition.containsKey("ostaWorktypeLevelName")) {
			sql += " and t.osta_worktype_level_name like ?";
			condition.put("ostaWorktypeLevelName","%"+condition.get("ostaWorktypeLevelName")+"%");
		}
		if (condition.containsKey("createUserName")) {
			sql += " and t.create_user_name like ?";
			condition.put("createUserName","%"+condition.get("createUserName")+"%");
		}
		if (condition.containsKey("startCreateTime")) {
			sql += " and t.create_time >= to_date( ?, 'yyyy-mm-dd hh24:mi:ss')";
		}
		if (condition.containsKey("endCreateTime")) {
			sql += " and t.create_time -1 < to_date( ?,'yyyy-mm-dd hh24:mi:ss')";
		}
		
		sql += " order by t.create_time desc";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {	
		String sql = "select t.* from PX_OSTA_REG_NOTICE_WRITE t ";
		return jdbcAssistant.query(sql, condition.valueArray());
	}
	
	@Override
	public Map<String, Object> load(String id) {	
		String sql = "select t.* from PX_OSTA_REG_NOTICE_WRITE t where t.id = ? ";
		return jdbcAssistant.queryOne(sql, new Object[]{id});
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public OstaRegNoticeWrite get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(OstaRegNoticeWrite entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(OstaRegNoticeWrite entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}

	@Override
	public Map<String, Object> loadAllGridByNoticeId(String noticeId, Condition condition) {
		String sql = "select t.id, t.notice_id, t.stu_id, t.stu_name, t.stu_sex, " +
				" t.stu_idcard, t.stu_edu," +
				" t.osta_worktype_id, t.osta_worktype_name, t.osta_worktype_level_id," +
				" t.osta_worktype_level_name, t.remarks, create_user_id," +
				" t.create_user_name, t.create_time, t.update_time" +
				" from px_osta_reg_notice_write t" +
				" where t.notice_id = '"+noticeId+"'";
//		Condition condition = this.getCondition(request,"stuName","stuIdcard",
//				"ostaWorktypeName","ostaWorktypeLevelName",
//				"createUserName","startCreateTime","endCreateTime");

		if (condition.containsKey("stuName")) {
			sql += " and t.stu_name like ?";
			condition.put("stuName","%"+condition.get("stuName")+"%");
		}
		if (condition.containsKey("stuIdcard")) {
			sql += " and t.stu_idcard like ?";
			condition.put("stuIdcard","%"+condition.get("stuIdcard")+"%");
		}
		if (condition.containsKey("ostaWorktypeName")) {
			sql += " and t.osta_worktype_name like ?";
			condition.put("ostaWorktypeName","%"+condition.get("ostaWorktypeName")+"%");
		}
		if (condition.containsKey("ostaWorktypeLevelName")) {
			sql += " and t.osta_worktype_level_name like ?";
			condition.put("ostaWorktypeLevelName","%"+condition.get("ostaWorktypeLevelName")+"%");
		}
		if (condition.containsKey("createUserName")) {
			sql += " and t.create_user_name like ?";
			condition.put("createUserName","%"+condition.get("createUserName")+"%");
		}
		if (condition.containsKey("startCreateTime")) {
			sql += " and t.create_time >= to_date( ?, 'yyyy-mm-dd hh24:mi:ss')";
		}
		if (condition.containsKey("endCreateTime")) {
			sql += " and t.create_time -1 < to_date( ?,'yyyy-mm-dd hh24:mi:ss')";
		}
		
		sql += " order by t.create_time desc";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
}
