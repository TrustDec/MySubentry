package com.insplatform.module.teachassessmentcom.repository.impl;

import java.io.Serializable;
import java.util.*;

import org.springframework.stereotype.Repository;

import com.insframework.system.base.repository.impl.BaseRepositoryImpl;

import com.insframework.system.map.Condition;
import com.insplatform.module.teachassessmentcom.model.TeachassessmentCom;
import com.insplatform.module.teachassessmentcom.repository.TeachassessmentComRepository;


@Repository
public class TeachassessmentComRepositoryImpl extends BaseRepositoryImpl<TeachassessmentCom> implements TeachassessmentComRepository{

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {	
		String sql = "   select distinct *  from (select d.px_address,  d.population,  d.px_content,   d.px_class_report,  "
                    +"   d.px_project,  d.user_number,  d.name, d.proname,  d.px_year, d.px_month,  d.px_organization,  d.remark,  d.class_Teacher  "
                    +"   from (select a.id, a.px_class_report,  b.name,  b.px_address,  b.px_content,  f.name proname,  "
                    +"   (select u.name  from SYS_USER u  where u.id = b.class_teacher) as class_Teacher,  b.px_year,  b.px_month,  "
                    +"   (select tt.name from PX_PROJECT tt   where tt.id = b.px_project) as px_project,  (select count(*)  "
                    +"   from PX_CLASS_REPORT_user tt  where tt.px_class_repor = b.id) as user_number,  b.population,  b.px_organization,  "
                    +"   b.remark  from PX_CLASS_CURRICULUM a,  PX_CLASS_REPORT     b,  px_project          f  "
                    +"   where f.id = b.px_project  and b.id = a.px_class_report  and b.state = '审批通过' and  a.stop_time < sysdate ) d  left join (select teacher_id, px_class_curriculum  "
                    +"   from PX_CLASS_CURRICULUM_TEACHER) e  on d.id = e.px_class_curriculum   where 1 = 1 )   ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {	
		String sql = "select t.* from PX_TEACHASSESSMENT_COM t ";
		return jdbcAssistant.query(sql, condition.valueArray());
	}
	
	@Override
	public Map<String, Object> load(String id) {	
		String sql = "select t.* from PX_TEACHASSESSMENT_COM t where t.id = ? ";
		return jdbcAssistant.queryOne(sql, new Object[]{id});
	}
	
	@Override
	public String getCurrOrgId(String id) {		
		String sql = "select org_id from V_SYS_USER_INFO where id ='"+id+"' ";
		return jdbcAssistant.queryAsString(sql);
	}
	
	@Override
	public Map<String, Object> loadAllStuGrid(Condition condition,String id,String pid) {	
		String sql = "  select q.lname,q.pname,q.cyear,q.cmonth,q.cday,q.id,q.apply_type,q.sex,q.name,q.org_name,q.account,q.create_time,q.id_card,q.company_name,q.duty,j.id as jjid "
                    +"  from  ( select t.id,   t.apply_type,   (case b.sex   when '1' then   '男' when '2' then  '女'  end) as sex,  "
                    +"  t.state, b.name,   b.org_name,  b.account,   t.create_time,  b.id_card,  b.company_name,  b.duty,b.org_id ," 
                    +"  to_char(sysdate,'YYYY')as cyear,to_char(sysdate,'MM')as cmonth,to_char(sysdate,'DD')as cday, " 
                    +"  (select a.name from PX_CLASS_REPORT a where a.id=t.PX_CLASS_REPOR) as pname ,"
                    +"  (select c.name from V_SYS_USER_INFO c where c.id='"+condition.getCurrentUser().getId()+"') as lname"
                    +"  from V_SYS_USER_INFO b, PX_CLASS_REPORT_USER t where t.userid = b.id  and t.state='审批通过' "
                    +"  and t.PX_CLASS_REPOR = '"+pid+"'  and b.org_id ='"+id+"' ) q   left join px_teachassessment_com j  on q.id=j.PNAME_ID ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TeachassessmentCom get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TeachassessmentCom entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TeachassessmentCom entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}
	
}
