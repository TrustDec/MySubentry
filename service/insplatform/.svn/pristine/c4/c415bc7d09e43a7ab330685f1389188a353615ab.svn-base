package com.insplatform.module.teachingplan.service.impl;

import java.io.Serializable;
import java.util.*;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.teachingplan.model.TeachingPlan;
import com.insplatform.module.teachingplan.repository.TeachingPlanRepository;
import com.insplatform.module.teachingplan.service.TeachingPlanService;

@Service
public class TeachingPlanServiceImpl extends BaseServiceImpl<TeachingPlan> implements TeachingPlanService{
	
	@Autowired
	private TeachingPlanRepository teachingPlanRepository;

	@Override
	public BaseRepository<TeachingPlan> getRepository() {		
		return teachingPlanRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return teachingPlanRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return teachingPlanRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return teachingPlanRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TeachingPlan get(Serializable id) {		
		return teachingPlanRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TeachingPlan entity) {	
		return teachingPlanRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TeachingPlan entity) {		
		teachingPlanRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		teachingPlanRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		teachingPlanRepository.deleteByIds(ids);
	}

	@Override
	public void updateMove(String id, String rowIndex,
			String currentId, String type) {
		teachingPlanRepository.move(id, rowIndex, currentId, type);
	}

	@Override
	public void addPlan(Condition condition, String classReportId,
			String projectId) {
		teachingPlanRepository.addPlan(condition, classReportId, projectId);
		
		//attachmentsService.batchSaveFiles(id,request);
	}

	@Override
	public void addTeachingplan(Condition condition, String id, String[] ids) {
		teachingPlanRepository.teachingplanAdd(condition, id, ids);
		
	}

	@Override
	public Map<String, Object> loadChooseGrid(Condition condition) {
		// TODO Auto-generated method stub
		return teachingPlanRepository.loadChooseGrid(condition);
	}

	


}
