package com.insplatform.module.teacherclock.controller;

import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.teacherclock.model.TeacherClock;
import com.insplatform.module.teacherclock.service.TeacherClockService;

@Controller
@RequestMapping("/px/course/teacherclock")
public class TeacherClockController extends BaseController{
	
	@Autowired
	private TeacherClockService teacherClockService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		return teacherClockService.loadAllGrid(this.getCondition(request, "name","proname","coursename","pxContent"));
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(teacherClockService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id,HttpServletRequest request){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(teacherClockService.load(id,condition));	
	}
	
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){		
		TeacherClock teacherclock = teacherClockService.get(id);
		this.bindObject(request, teacherclock);
		teacherClockService.update(teacherclock);
		return this.getMessager().success();
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllQueryGrid")
	public @ResponseBody Map<String, Object> loadAllQueryGrid(
			HttpServletRequest request, HttpServletResponse response){
		return teacherClockService.loadAllQueryGrid(this.getCondition(request, "name","proname","coursename","pxContent"));
	}
	
	/**
	 * 加载打卡数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllQueryClockGrid")
	public @ResponseBody Map<String, Object> loadAllQueryClockGrid(@RequestParam("id") String id,@RequestParam("pxId") String pxId,HttpServletRequest request){
		return teacherClockService.loadAllQueryClockGrid(id, pxId, this.getCondition(request, "name"));
	}
	
	/**
	 * 添加学员打卡
	 * 
	 * @param dict
	 * @return
	 */
	@RequestMapping("/addClockRecord")	
	public @ResponseBody Map<String, Object> addClockRecord(@RequestParam("statu") String statu,@RequestParam("cid") String cid,@RequestParam("pxId") String pxId,HttpServletRequest request){
		String[] userIds = this.getSelectedItems(request);
		teacherClockService.addClockRecord(userIds,statu,cid,pxId,request);		
		return this.getMessager().success();
	}
	/**
	 * 添加单个学员打卡
	 * 
	 * @param dict
	 * @return
	 */
	@RequestMapping("/addOneClockRecord")	
	public @ResponseBody Map<String, Object> addOneClockRecord(@RequestParam("statu") String statu,@RequestParam("cid") String cid,@RequestParam("pxId") String pxId,@RequestParam("userId") String userId){
		teacherClockService.addOneClockRecord(statu,cid,pxId,userId);		
		return this.getMessager().success();
	}
	
	/**
	 * 加载教师授课调整数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAdjustmentAllGrid")
	public @ResponseBody Map<String, Object> loadAdjustmentAllGrid(
			HttpServletRequest request, HttpServletResponse response){ 
		return teacherClockService.loadAdjustmentAllGrid(this.getCondition(request, "name","proname","coursename","pxContent"));
	}
	
	/**
	 * 加载教师授课调整单挑数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadOneAdjustment")
	public @ResponseBody Map<String, Object> loadOneAdjustment(@RequestParam("id") String id,HttpServletRequest request){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(teacherClockService.loadOneAdjustment(id,condition));	
	}
	
	@RequestMapping("/loadOneEditAdjustment")
	public @ResponseBody Map<String, Object> loadOneEditAdjustment(@RequestParam("id") String id,HttpServletRequest request,HttpServletResponse response){
		return teacherClockService.loadOneEditAdjustment(id,this.getCondition(request));
	}
	
}
