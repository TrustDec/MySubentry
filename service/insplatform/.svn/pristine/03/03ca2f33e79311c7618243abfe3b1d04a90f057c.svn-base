package com.insplatform.module.yearplan.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.yearplan.model.YearPlanMonth;
import com.insplatform.module.yearplan.repository.YearPlanMonthRepository;
import com.insplatform.module.yearplan.service.YearPlanMonthService;

@Service
public class YearPlanMonthServiceImpl extends BaseServiceImpl<YearPlanMonth> implements YearPlanMonthService{
	
	@Autowired
	private YearPlanMonthRepository yearPlanMonthRepository;

	@Override
	public BaseRepository<YearPlanMonth> getRepository() {		
		return yearPlanMonthRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return yearPlanMonthRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return yearPlanMonthRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return yearPlanMonthRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public YearPlanMonth get(Serializable id) {		
		return yearPlanMonthRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(YearPlanMonth entity) {	
		boolean flag = yearPlanMonthRepository.beforeSaveCheckMonth(entity);
		if (!flag) {
			return "hasThisMonth";
		}
		return yearPlanMonthRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(YearPlanMonth entity) {
		yearPlanMonthRepository.update(entity);
	}
	
	@Override
	public String updatex(YearPlanMonth yearplanmonth) {
		boolean flag = yearPlanMonthRepository.beforeSaveCheckMonth(yearplanmonth);
		if (!flag) {
			return "hasThisMonth";
		}
		yearPlanMonthRepository.update(yearplanmonth);
		return "1";
	}

	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		yearPlanMonthRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		yearPlanMonthRepository.deleteByIds(ids);
	}

	@Override
	public List<Map<String,Object>> loadAllOptionalMonth(String yearPlanId) {
		List<Map<String, Object>> hasMonths = yearPlanMonthRepository.loadAllMonth(yearPlanId);
		List<Integer> list = new ArrayList<Integer>(hasMonths.size());
		for (int i = 0; i < hasMonths.size(); i++) {
			list.add(Integer.parseInt(hasMonths.get(i).get("monthName")+""));
		}
		List<Integer> monthAll = new ArrayList<Integer>(12);
		for (int i = 1; i < 13; i++) {
			monthAll.add(i);
		}
		monthAll.removeAll(list);
		List<Map<String,Object>> listMonth =new ArrayList<Map<String,Object>>();
		String[] monthAry = new String[]{"0","一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"};
		for (Integer i : monthAll) {
			Map<String,Object> map=new HashMap<String,Object>();
			map.put("value", i);
			map.put("text", monthAry[i]);
			listMonth.add(map);
		}
		return listMonth;
	}

}
