package com.insplatform.module.project.repository.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.project.model.ProjectClassify;
import com.insplatform.module.project.repository.ProjectClassifyRepository;


@Repository
public class ProjectClassifyRepositoryImpl extends BaseRepositoryImpl<ProjectClassify> implements ProjectClassifyRepository{

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {	
		String sql = "select t.* from PX_PROJECT_CLASSIFY t where t.is_delete = 'N' order by t.name ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {
		List<Object> parameters = new ArrayList<Object>();
		String sql = "select t.*,t.name as text,t.id as value from PX_PROJECT_CLASSIFY t where t.is_delete = 'N' order by t.name ";
		return jdbcAssistant.query(sql, parameters.toArray());
	}
	
	@Override
	public Map<String, Object> load(String id) {	
		String sql = "select t.* from PX_PROJECT_CLASSIFY t where t.id = ? ";
		return jdbcAssistant.queryOne(sql, new Object[]{id});
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public ProjectClassify get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(ProjectClassify entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(ProjectClassify entity) {		
		super.update(entity);
	}
	

	@Override
	public void deleteById(Serializable id) {		
		String sql = "update px_project_classify set is_delete = 'Y' where id = '" + id + "'";
		jdbcAssistant.update(sql);
	}
	
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}

	@Override
	public int deleteByIdCheck(String id) {
		String sql = "select t.* from px_project t where project_classify_id = '" + id + "' and t.is_delete = 'N'";
		List<Map<String,Object>> list = jdbcAssistant.query(sql);
		return list.size();
	}
	
}
