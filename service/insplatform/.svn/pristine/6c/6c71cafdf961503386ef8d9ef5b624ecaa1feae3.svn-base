package com.insplatform.module.osta.register.demand.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.common.utils.TextUtil;
import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.curruser.CurrentUser;
import com.insframework.system.map.Condition;
import com.insframework.system.map.Messager;

import com.insplatform.module.osta.register.demand.model.OstaRegDemandWrite;
import com.insplatform.module.osta.register.demand.repository.OstaRegDemandWriteRepository;
import com.insplatform.module.osta.register.demand.service.OstaRegDemandWriteService;

@Service
public class OstaRegDemandWriteServiceImpl extends BaseServiceImpl<OstaRegDemandWrite> implements OstaRegDemandWriteService{
	
	@Autowired
	private OstaRegDemandWriteRepository ostaRegDemandWriteRepository;

	@Override
	public BaseRepository<OstaRegDemandWrite> getRepository() {		
		return ostaRegDemandWriteRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return ostaRegDemandWriteRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return ostaRegDemandWriteRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return ostaRegDemandWriteRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public OstaRegDemandWrite get(Serializable id) {		
		return ostaRegDemandWriteRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(OstaRegDemandWrite entity) {	
		return ostaRegDemandWriteRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(OstaRegDemandWrite entity) {		
		ostaRegDemandWriteRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		ostaRegDemandWriteRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		ostaRegDemandWriteRepository.deleteByIds(ids);
	}

	@Override
	public Map<String, Object> addReg(String pid, CurrentUser user) {
		Messager msg = new Messager();
		if (TextUtil.isEmpty(pid)) {
			return msg.put("err", "errParm");
		}
		Map<String, Object> map = ostaRegDemandWriteRepository.loadByPidAndUserId(pid,user.getId());
		if (map!=null) {
			return msg.put("id", map.get("id"));
		}
		String id = ostaRegDemandWriteRepository.addANewRecord(pid,user.getId());
		return msg.put("id", id);
	}

	@Override
	public String loadIdByDemandId(String pid, String userId) {
		Map<String, Object> map = ostaRegDemandWriteRepository.loadByPidAndUserId(pid,userId);
			return map!=null&&map.get("id")!=null?map.get("id").toString():null;
	}

}
