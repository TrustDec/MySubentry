package com.insplatform.module.project.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.project.model.ProjectClassify;
import com.insplatform.module.project.service.ProjectClassifyService;

@Controller
@RequestMapping("/px/projectclassify")
public class ProjectClassifyController extends BaseController{
	
	@Autowired
	private ProjectClassifyService projectClassifyService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return projectClassifyService.loadAllGrid(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(projectClassifyService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(projectClassifyService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(ProjectClassify projectclassify){
		projectClassifyService.save(projectclassify);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){
		ProjectClassify projectclassify = projectClassifyService.get(id);
		this.bindObject(request, projectclassify);
		projectClassifyService.update(projectclassify);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request,@RequestParam("id") String id){
		int hasChild = projectClassifyService.deleteByIdCheck(id);
		if(hasChild > 0)
		{
			return this.getMessager().put("success", false);
		}
		else{
			projectClassifyService.deleteById(id);
			return this.getMessager().success();
			
		}
	}
	
	/**
	 * 查询培训项目分类模板数据
	 * @param request
	 * @return
	 */
	@RequestMapping("/loadAllListTemplate")
	public @ResponseBody
	Map<String, Object> loadAllListTemplate(HttpServletRequest request) {
		Condition condition = this.getCondition(request,"projectClassifyId");
		return this.getMessager().success()
				.data(projectClassifyService.loadAllListTemplate(condition));
	}
}
