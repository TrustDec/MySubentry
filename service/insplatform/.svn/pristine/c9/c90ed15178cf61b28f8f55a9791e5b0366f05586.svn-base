package com.insplatform.module.everyday.repository.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.insframework.common.utils.TextUtil;
import com.insframework.component.service.ext.grid.GridService;
import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.everyday.model.EverydayHistory;
import com.insplatform.module.everyday.repository.EverydayHistoryRepository;

@Repository
public class EverydayHistoryRepositoryImpl extends
		BaseRepositoryImpl<EverydayHistory> implements
		EverydayHistoryRepository {
	@Autowired
	private GridService gridService;

	@Override
	public Map<String, Object> loadAll(Condition condition) {
		List<Object> queryParams = new ArrayList<Object>();
		String sql = "select eh.*,es.date_no,es.question_title,es.question_type,es.question_difficulty,es.QUESTION_ANSWER,u.name user_name from px_everyday_setting es join px_everyday_history eh on(es.id = eh.setting_id) join sys_user u on(eh.user_id = u.id) where 1=1 ";
		String questionTitle = condition.get("questionTitle") + "";
		if (TextUtil.isNotEmpty(questionTitle)) {
			sql += " and es.QUESTION_TITLE like ? ";
			queryParams.add("%" + questionTitle + "%");
		}
		String questionType = condition.get("questionType") + "";
		if (TextUtil.isNotEmpty(questionType)) {
			sql += " and es.QUESTION_TYPE = ? ";
			queryParams.add(questionType);
		}
		String questionDifficulty = condition.get("questionDifficulty") + "";
		if (TextUtil.isNotEmpty(questionDifficulty)) {
			sql += " and es.QUESTION_DIFFICULTY = ? ";
			queryParams.add(questionDifficulty);
		}
		String userId = condition.get("userId") + "";
		if (TextUtil.isNotEmpty(userId)) {
			sql += " and eh.user_id = ? ";
			queryParams.add(userId);
		}
		String userName = condition.get("userName") + "";
		if (TextUtil.isNotEmpty(userName)) {
			sql += " and u.name like ? ";
			queryParams.add("%"+userName+"%");
		}
		sql += " order by es.date_no desc";
		return gridService.loadData(condition.getGridTransModel(), sql,
				queryParams.toArray(), null);
	}
}
