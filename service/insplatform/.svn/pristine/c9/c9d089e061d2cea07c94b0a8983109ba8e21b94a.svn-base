package com.insplatform.module.osta.register.notice.repository.impl;

import java.io.Serializable;
import java.util.*;

import org.springframework.stereotype.Repository;

import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insplatform.module.osta.register.notice.model.OstaRegWorktypeCost;
import com.insplatform.module.osta.register.notice.repository.OstaRegWorktypeCostRepository;

import com.insframework.system.map.Condition;


@Repository
public class OstaRegWorktypeCostRepositoryImpl extends BaseRepositoryImpl<OstaRegWorktypeCost> implements OstaRegWorktypeCostRepository{

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {	
		String sql = "select t.* from PX_OSTA_REG_WORKTYPE_COST t " +
				" where t.osta_worktype_level_id = '"+condition.get("ostaWorktypeLevelId")+"'";
		condition.remove("ostaWorktypeLevelId");
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {	
		String sql = "select t.* from PX_OSTA_REG_WORKTYPE_COST t ";
		return jdbcAssistant.query(sql, condition.valueArray());
	}
	
	@Override
	public Map<String, Object> load(String id) {	
		String sql = "select t.* from PX_OSTA_REG_WORKTYPE_COST t where t.id = ? ";
		return jdbcAssistant.queryOne(sql, new Object[]{id});
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public OstaRegWorktypeCost get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(OstaRegWorktypeCost entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(OstaRegWorktypeCost entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}

	@Override
	public int saveBach(String levelId) {
		String sql = "insert into px_osta_reg_worktype_cost" +
				" (id, cost_name, cost_amount, osta_worktype_level_id)" +
				" select '"+levelId+"'||rownum,rct.cost_name,rct.cost_amount,'"+levelId+"' " +
				" from px_osta_reg_cost_tmp rct";
		return jdbcAssistant.update(sql);
	}

	@Override
	public List<Map<String, Object>> loadAllListByThreeId(String noticeId,
			String worktypeId, String worktypeLevelId) {
		String sql = "select wc.id,wc.cost_name,wc.cost_amount,wc.osta_worktype_level_id" +
				" from px_osta_reg_worktype_level t" +
				" left join px_osta_reg_worktype_cost wc on wc.osta_worktype_level_id = t.id" +
				" where t.notice_id = '"+noticeId+"' " +
						" and t.worktype_id = '"+worktypeId+"' and t.worktype_level_id = '"+worktypeLevelId+"' ";
		return jdbcAssistant.query(sql);
	}
	
}
