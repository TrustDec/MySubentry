package com.insplatform.module.testpaper.repository.impl;

import java.io.Serializable;
import java.util.*;

import org.springframework.stereotype.Repository;

import com.insframework.common.utils.TextUtil;
import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insplatform.module.testpaper.model.TestPaperKpoint;
import com.insplatform.module.testpaper.repository.TestPaperKpointRepository;

import com.insframework.system.map.Condition;


@Repository
public class TestPaperKpointRepositoryImpl extends BaseRepositoryImpl<TestPaperKpoint> implements TestPaperKpointRepository{

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {	
		String sql = "select p.id ,(select count(*) from PX_QUESTION tt where tt.type='1' and tt.kpoint_id=t.id and tt.difficulty='1') as radio1_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='1' and tt.kpoint_id=t.id and tt.difficulty='2') as radio2_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='1' and tt.kpoint_id=t.id and tt.difficulty='3') as radio3_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='2' and tt.kpoint_id=t.id and tt.difficulty='1') as more1_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='2' and tt.kpoint_id=t.id and tt.difficulty='2') as more2_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='2' and tt.kpoint_id=t.id and tt.difficulty='3') as more3_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='3' and tt.kpoint_id=t.id and tt.difficulty='1') as judge1_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='3' and tt.kpoint_id=t.id and tt.difficulty='2') as judge2_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='3' and tt.kpoint_id=t.id and tt.difficulty='3') as judge3_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='4' and tt.kpoint_id=t.id and tt.difficulty='1') as answers1_sum ," +
				"(select count(*) from PX_QUESTION tt where tt.type='4' and tt.kpoint_id=t.id and tt.difficulty='2') as answers2_sum ," +
				"(select count(*) from PX_QUESTION tt where tt.type='4' and tt.kpoint_id=t.id and tt.difficulty='3') as answers3_sum ," +
				"t.name,t.name as text,t.parent_id as pid,t.parent_id,t.remark from PX_KPOINT t inner join PX_TEST_PAPER_KPOINT p " +
				"on p.kpoint = t.id where p.px_test_paper=? ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {	
		String sql = "select t.* from PX_TEST_PAPER_KPOINT t ";
		return jdbcAssistant.query(sql, condition.valueArray());
	}
	
	@Override
	public Map<String, Object> load(String id) {	
		String sql = "select t.* from PX_TEST_PAPER_KPOINT t where t.id = ? ";
		return jdbcAssistant.queryOne(sql, new Object[]{id});
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TestPaperKpoint get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TestPaperKpoint entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TestPaperKpoint entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}

	@Override
	public List<Map<String, Object>> loadAllTreeGridBySelectKpoint(
			Condition condition) {
		String sql = "select t.id ,t.name,t.name as text,t.parent_id as pid,t.parent_id,t.remark,(select count(*) from PX_QUESTION tt where tt.type='1' and tt.kpoint_id=t.id) as radio_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='2' and tt.kpoint_id=t.id) as more_sum,(select count(*) from PX_QUESTION tt where tt.type='3' and tt.kpoint_id=t.id) as judge_sum," +
				"(select count(*) from PX_QUESTION tt where tt.type='4' and tt.kpoint_id=t.id) as answers_sum from PX_KPOINT t";
		return jdbcAssistant.query(sql);
	}

	@Override
	public void addKpoint(Condition condition) {
		// TODO Auto-generated method stub
		String ids=condition.get("ids").toString();
		String paperId=condition.get("paperId").toString();
		ids=ids.substring(0,ids.lastIndexOf(","));
		String[] idsresult=ids.split(",");
		  for(String id:idsresult)
		  {  
			String sql="select * from px_test_paper_kpoint t where t.kpoint='"+id+"' and t.px_test_paper='"+paperId+"'";
			List<Map<String, Object>> list=jdbcAssistant.query(sql);
			if(list.size()==0)
			{
					String sesql="select * from PX_KPOINT t where t.parent_id='"+id+"'";
					List<Map<String, Object>> list2=jdbcAssistant.query(sesql);
					if(list2.size()==0)
					{
						String insertsql="insert into px_test_paper_kpoint (id, kpoint, px_test_paper) values ('"+TextUtil.getUUID()+"', '"+id+"', '"+paperId+"')";
						jdbcAssistant.execute(insertsql);
					}
				
					
			}
		  }
		
	}

	
	@Override
	public Map<String, Object> loadAllKpintSelect(Condition condition) {
		String sql = "select t.*,t.name as text, t.parent_id as pid from PX_KPOINT t order by t.name ";
		return treeService.loadData(sql);
	}

	@Override
	public int loadAllKpoint(Condition condition) {
		String pxTestPaper=condition.get("pxTestPaper").toString();
		String sql = "select count(*) as shulaing from PX_TEST_PAPER_KPOINT t where t.px_test_paper='"+pxTestPaper+"'";
		Map<String, Object> paperMap=jdbcAssistant.queryOne(sql);
		//试卷试题总数
		int paperTotal=Integer.parseInt(paperMap.get("shulaing").toString());
		return paperTotal;
	}

	@Override
	public void delete(String[] ids) {
		for(int i = 0 ; i < ids.length ; i++)
		{
			String kpointSql="select * from PX_TEST_PAPER_KPOINT t where t.id='"+ids[i]+"'";
			Map<String, Object> map=jdbcAssistant.queryOne(kpointSql);
			String testPaper=map.get("pxTestPaper")+"";
			String kpointId=map.get("kpoint")+"";
			String sql="delete px_test_paper_kpoint t where t.id ='"+ids[i]+"'";
			String deleteKpointsql="delete px_test_paper_regulation t where t.px_kpoint ='"+kpointId+"' and t.px_test_paper='"+testPaper+"'";
			String deleteQuestionSql="delete PX_TEST_PAPER_QUESTION t where t.kpoint_id ='"+kpointId+"' and t.px_test_paper='"+testPaper+"'";
			jdbcAssistant.execute(sql);
			jdbcAssistant.execute(deleteKpointsql);
			jdbcAssistant.execute(deleteQuestionSql);
		}
		
		
		
		
		
		
	}
	
	
	
	
}
