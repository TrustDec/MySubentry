package com.insplatform.module.osta.register.demand.repository;

import java.util.*;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.curruser.CurrentUser;
import com.insplatform.module.osta.register.demand.model.OstaRegDemandWriteWork;

import com.insframework.system.map.Condition;


public interface OstaRegDemandWriteWorkRepository extends BaseRepository<OstaRegDemandWriteWork>{
	
	/**
	 * 加载数据
	 * @param pid 
	 * @param request
	 * @param response
	 * @return
	 */
	Map<String, Object> loadAllGrid(String pid, Condition condition);
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	List<Map<String, Object>> loadAllList(Condition condition);
	
	/**
	 * 加载单条数据
	 * @param request
	 * @param response
	 * @return
	 */
	Map<String, Object> load(String id);

	/**
	 * 发送审批前校验
	 * @param id
	 * @return
	 */
	boolean beforeCheckUpdateApprovalStatus(String id);

	/**
	 * 修改节点
	 * @param id
	 * @param node
	 * @return
	 */
	int updateApprovalNode(String id, int node);
	
	/**
	 * 修改审批状态
	 * @param id
	 * @param status
	 * @return
	 */
	int updateApprovalStatus(String id, int status);

	/**
	 * 删除前校验
	 * @param id
	 * @return
	 */
	boolean beforeCheckDeleteByIdsx(String id);

	/**
	 * 删除一条数据
	 * @param id
	 * @return
	 */
	int deleteByIdx(String id);

	/**
	 * 校验该工种的该等级是否已经存在
	 * @param entity
	 * @return
	 */
	boolean beforeSaveCheck(OstaRegDemandWriteWork entity);

	/**
	 * 根据当前菜单，考评员需求id和当前用户查询出可以看到的所有数据
	 * @param condition
	 * @return
	 */
	Map<String, Object> loadAllGridByApprover(Condition condition);

	/**
	 * 审批信息查看
	 * @param id
	 * @param user 
	 * @return
	 */
	Map<String, Object> loadByApprover(String id, CurrentUser user);

	/**
	 * 根据id更新节点和状态值
	 * @param id
	 * @param node
	 * @param status
	 * @return
	 */
	int updateApprovalNodeAndStatus(String id, int node, int status);

	/**
	 * 审批通过前校验
	 * @param id
	 * @param node 
	 * @return
	 */
	boolean beforeApprovalPassCheck(String id, int node);

	/**
	 * 审批不通过前校验
	 * @param id
	 * @param node
	 * @return
	 */
	boolean beforeApprovalNoPassCheck(String id, int node);

	/**
	 * 查询出本需求对应的工种对应等级的报考人数
	 * @param condition
	 * @return
	 */
	List<Map<String, Object>> loadAllWorktype(Condition condition);
	
	/**
	 * 将技能鉴定站未审核的设置为审核通过
	 * @param condition 
	 * @return
	 */
	int approvalPassByJNJDZWSH(Condition condition);
	
	/**
	 * 报考查询
	 * @param condition
	 * @return
	 */
	Map<String, Object> loadAllGridByQuery(Condition condition);

	/**
	 * 报考查询
	 * @param id
	 * @param user
	 * @return
	 */
	Map<String, Object> loadByQuery(String id, CurrentUser user);


}
