package com.insplatform.system.login.controller;




import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.common.utils.SecurityUtil;
import com.insframework.system.base.controller.BaseController;
import com.insplatform.system.login.service.LoginService;
import com.insplatform.system.user.service.UserService;



/**
 * 登录控制器
 * @author guom
 *
 */
@Controller
public class LoginController extends BaseController{
	
	@Autowired
	private LoginService loginService;
	
	@Autowired
	private UserService userService;
	
	/**
	 * 跳转到登陆页面
	 * @return
	 */
	@RequestMapping("/login")
	public String login(){	
		return "/login";
	}
	
	/**
	 * 登陆验证
	 * @param userName	用户名
	 * @param password	密码
	 * @param captcha	验证码
	 * @param request
	 * @return
	 */
	@RequestMapping("/login/enter")
	@ResponseBody		
	public Map<String,Object> enter(@RequestParam(value="userName",required=false) String userName,
					  @RequestParam(value="password",required=false) String password,
					  @RequestParam(value="captcha",required=false) String captcha,
					  HttpServletRequest request){
		
		Map<String,Object> map = new HashMap<String,Object>();
		
		//检查验证码
		boolean isResponseCorrect = false;
		try{
			Object sessionCaptcha = request.getSession().getAttribute("CAPTCHA");
			if(sessionCaptcha != null){
				isResponseCorrect = sessionCaptcha.toString().equals(captcha.toUpperCase());
				if(isResponseCorrect){
					map.put("result", "CAPTCHA_SUCCESS");
				}
			}
		}catch(Exception ex){
			logger.error("登陆验证码验证失败",ex);
		}		
				
		if(!isResponseCorrect){
			map.put("result", "CAPTCHA_ERROR");
		}else{	
			//检查用户名密码
			if(loginService.check(userName, password)){				
				if(!loginService.checkLock(userName, password)){
					map.put("result", "ACCOUNT_SUCCESS");
					loginService.setCurrentUserInfo(request, userName);	
				}else{
					map.put("result", "ACCOUNT_LOCKED");
				}								
			}else{
				map.put("result", "ACCOUNT_ERROR");
			}
		}
		
		return map;		
	}
	
	/**
	 * 登陆验证（手机端）
	 * @param userName	用户名
	 * @param password	密码
	 * @param captcha	验证码
	 * @param request
	 * @return
	 */
	@RequestMapping("/login/mobile/enter")
	@ResponseBody		
	public Map<String,Object> mobileEnter(@RequestParam(value="userName",required=false) String userName,
					  @RequestParam(value="password",required=false) String password,					 
					  HttpServletRequest request){
		
		Map<String,Object> map = new HashMap<String,Object>();				
		
		//检查用户名密码
		if(loginService.check(userName, password)){				
			if(!loginService.checkLock(userName, password)){
				map.put("result", "ACCOUNT_SUCCESS");
				String userId = userService.loadUserIdByAccount(userName);
				map.put("userId", SecurityUtil.encrypt(userId));				
			}else{
				map.put("result", "ACCOUNT_LOCKED");
			}								
		}else{
			map.put("result", "ACCOUNT_ERROR");
		}		
		
		return map;		
	}
	
	
	/**
	 * 退出系统
	 * @param request
	 * @return
	 */
	@RequestMapping("/login/out")	
	public String out(HttpServletRequest request){
		request.getSession().invalidate();
		//request.getSession().setAttribute(App.CURRENT_USER, null);
		return "redirect:/main";
	}
	
	
}
