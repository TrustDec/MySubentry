package com.insplatform.module.subcompanymontharrange.controller;

import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.subcompanymontharrange.model.SubcompanyMonthArrange;
import com.insplatform.module.subcompanymontharrange.service.SubcompanyMonthArrangeService;

@Controller
@RequestMapping("/px/subcompanymontharrange")
public class SubcompanyMonthArrangeController extends BaseController{
	
	@Autowired
	private SubcompanyMonthArrangeService subcompanyMonthArrangeService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		return subcompanyMonthArrangeService.loadAllGrid(this.getCondition(request, "pxproject","pxclassroom"));
	}
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllAppGrid")
	public @ResponseBody Map<String, Object> loadAllAppGrid(
			HttpServletRequest request, HttpServletResponse response){
		return subcompanyMonthArrangeService.loadAllAppGrid(this.getCondition(request, "pxproject","pxclassroom","companyName"));
	}
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(subcompanyMonthArrangeService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(subcompanyMonthArrangeService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(SubcompanyMonthArrange subcompanymontharrange,HttpServletRequest request){
		subcompanymontharrange.setCreateUserId(this.getCurrentUser(request).getId());
		subcompanymontharrange.setCreateUserName(this.getCurrentUser(request).getName());
		Date date = new Date();
		subcompanymontharrange.setCreateTime(date);
		subcompanymontharrange.setUpdateTime(date);
		subcompanyMonthArrangeService.save(subcompanymontharrange);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){		
		SubcompanyMonthArrange subcompanymontharrange = subcompanyMonthArrangeService.get(id);
		this.bindObject(request, subcompanymontharrange);
		subcompanymontharrange.setUpdateTime(new Date());
		subcompanyMonthArrangeService.update(subcompanymontharrange);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		subcompanyMonthArrangeService.deleteByAIds(ids);
		return this.getMessager().success();
	}
	
	/**
	 * 审批通过
	 * @param dict
	 * @return
	 */
	@RequestMapping("/agreeApproval")	
	public @ResponseBody Map<String, Object> agreeApproval(
		   HttpServletRequest request){		
		String [] ids = this.getSelectedItems(request);
		for (String id : ids) {
			SubcompanyMonthArrange subcompanymontharrange = subcompanyMonthArrangeService.get(id);
			this.bindObject(request, subcompanymontharrange);
			subcompanymontharrange.setUpdateTime(new Date());
			subcompanymontharrange.setApproval("1");
			subcompanyMonthArrangeService.update(subcompanymontharrange);
		}
		return this.getMessager().success();
	}
	
	/**
	 * 审批不通过
	 * @param dict
	 * @return
	 */
	@RequestMapping("/disagreeApproval")	
	public @ResponseBody Map<String, Object> disagreeApproval(
		   HttpServletRequest request){		
		String [] ids = this.getSelectedItems(request);
		for (String id : ids) {
			SubcompanyMonthArrange subcompanymontharrange = subcompanyMonthArrangeService.get(id);
			this.bindObject(request, subcompanymontharrange);
			subcompanymontharrange.setUpdateTime(new Date());
			subcompanymontharrange.setApproval("0");
			subcompanyMonthArrangeService.update(subcompanymontharrange);
		}
		return this.getMessager().success();
	}

	
}
