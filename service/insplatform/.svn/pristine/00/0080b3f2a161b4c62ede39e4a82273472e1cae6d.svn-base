package com.insplatform.module.examination.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.examination.model.ExaminationUser;
import com.insplatform.module.examination.repository.ExaminationUserRepository;
import com.insplatform.module.examination.service.ExaminationUserService;

@Service
public class ExaminationUserServiceImpl extends BaseServiceImpl<ExaminationUser> implements ExaminationUserService{
	
	@Autowired
	private ExaminationUserRepository examinationUserRepository;

	@Override
	public BaseRepository<ExaminationUser> getRepository() {		
		return examinationUserRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return examinationUserRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return examinationUserRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return examinationUserRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public ExaminationUser get(Serializable id) {		
		return examinationUserRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(ExaminationUser entity) {	
		return examinationUserRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(ExaminationUser entity) {		
		examinationUserRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		examinationUserRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		examinationUserRepository.deleteByIds(ids);
	}

	@Override
	public void add(String id, String[] ids, Condition condition) {
		examinationUserRepository.add(id, ids, condition);
		
	}

	@Override
	public void addMotion(String id, String ClassReportId, Condition condition) {
		examinationUserRepository.addMotion(id, ClassReportId, condition);
		
	}

	@Override
	public String deleteCheck(String[] ids, Condition condition) {
		return examinationUserRepository.deleteCheck(ids, condition);
	}

	@Override
	public String delete(String[] ids, Condition condition) {
		return examinationUserRepository.delete(ids, condition);
	}

}
