package com.insplatform.module.testpaper.controller;

import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.testpaper.service.TestPaperQuestionService;

@Controller
@RequestMapping("/px/testpaperquestion")
public class TestPaperQuestionController extends BaseController{
	
	@Autowired
	private TestPaperQuestionService testPaperQuestionService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"pxTestPaper","title","type","difficulty","questionScore","kpointname");
		return testPaperQuestionService.loadAllGrid(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(testPaperQuestionService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(testPaperQuestionService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(HttpServletRequest request){
		Condition condition = this.getCondition(request,"pxTestPaper");
		String [] ids = this.getSelectedItems(request);
		testPaperQuestionService.addQuestion(condition,ids);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   HttpServletRequest request){
		String [] ids = this.getSelectedItems(request,"id");
		double score=Double.parseDouble(request.getParameter("score").toString());
		testPaperQuestionService.updateScore(ids, score);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		testPaperQuestionService.deleteByIds(ids);
		return this.getMessager().success();
	}

	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/addRandomQuestion")	
	public @ResponseBody Map<String, Object> addRandomQuestion( HttpServletRequest request){
		Condition condition = this.getCondition(request,"pxTestPaper");
		testPaperQuestionService.addRandomQuestion(condition);
		return this.getMessager().success();
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllQuestionGridChooser")
	public @ResponseBody Map<String, Object> loadAllQuestionGridChooser(
			HttpServletRequest request, HttpServletResponse response){		
		return testPaperQuestionService.loadAllQuestionGridChooser(this.getCondition(request, "title", "createUserName", "type", "difficulty", "kpointName","pxTestPaper"));
	}
	
	/**
	 * 检查试卷是否完整
	 * @param dict
	 * @return
	 */
	@RequestMapping("/getPaperState")	
	public @ResponseBody Map<String, Object> getPaperState( HttpServletRequest request){
		Condition condition = this.getCondition(request,"pxTestPaper");
		String resultTip=testPaperQuestionService.getPaperState(condition);
		return this.getMessager().success().put("resultTip", resultTip);
	}
	
	/**
	 * 获取试题数量
	 * @param dict
	 * @return
	 */
	@RequestMapping("/getQuestionSum")	
	public @ResponseBody Map<String, Object> getQuestionSum( HttpServletRequest request){
		Condition condition = this.getCondition(request,"pxTestPaper");
		int sum=testPaperQuestionService.getQuestionSum(condition);
		return this.getMessager().success().put("sum", sum);
	}
	
	
}
