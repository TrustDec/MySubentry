package com.insplatform.module.teachassessmentcom.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.teachassessmentcom.model.TeachassessmentCom;
import com.insplatform.module.teachassessmentcom.repository.TeachassessmentComRepository;
import com.insplatform.module.teachassessmentcom.service.TeachassessmentComService;


@Service
public class TeachassessmentComServiceImpl extends BaseServiceImpl<TeachassessmentCom> implements TeachassessmentComService{
	
	@Autowired
	private TeachassessmentComRepository teachassessmentComRepository;

	@Override
	public BaseRepository<TeachassessmentCom> getRepository() {		
		return teachassessmentComRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return teachassessmentComRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return teachassessmentComRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return teachassessmentComRepository.load(id);
	}
	
	@Override
	public Map<String, Object> loadAllStuGrid(Condition condition,String pid) {	
		String id=teachassessmentComRepository.getCurrOrgId(condition.getCurrentUser().getId());
		return teachassessmentComRepository.loadAllStuGrid(condition,id,pid);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TeachassessmentCom get(Serializable id) {		
		return teachassessmentComRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TeachassessmentCom entity) {	
		return teachassessmentComRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TeachassessmentCom entity) {		
		teachassessmentComRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		teachassessmentComRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		teachassessmentComRepository.deleteByIds(ids);
	}

}
