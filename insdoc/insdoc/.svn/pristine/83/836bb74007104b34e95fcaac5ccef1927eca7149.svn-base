<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>平台使用手册</title>
<link href="../common/include.css" rel="stylesheet" />
</head>
<body id="bodyId">
<h1>ChooserGirdWindow</h1> 
<h3>介绍</h3>
<p>
表格选择器窗口
</p>
<img src="../../img/ChooserGridWindow.jpg" />
<h3>示例代码</h3>
<pre class="brush:js;">
Ext.define('App.demo.chooser.ChooserGridWindow',{
	
	init: function(){
		var view = Ext.create('Ins.chooser.ChooserGirdWindow',{
			//确认选择后的回调函数
			onSelect: function(selection){
				console.log("确认选择事件");
				console.log(selection);
				//selection拥有以下属性
//				selection.length;
//				selection.idSer;
//				selection.idArr;
//				selection.records;
				alert("选择的id有"+selection.idSer+"名字："+selection.records[0].data.name);
			},
			//选择前
			onBeforeSelect: function(){
				console.log("选择前");
				alert("选择前事件");
				//返回值类型boolean，true：程序继续往下执行，false：程序终止执行后面的操作，不写返回值时和false等效
				return true;
			},
			//展示前清除选中
			beforeShowClear: true,
			
			//以下属性对应普通表格的属性		
			//选择模式：MULTI、SINGLE
			selectMode : "MULTI",	
			url : CTX_PATH + '/module/crudgrid/loadAll',
			//列数组
			fields: ['id','name','age','birthday'],
			//实际列
			gridColumns: [{
					text: 'id',
					dataIndex: 'id',
					width: 230
				},{
					text: '姓名',
					dataIndex: 'name',
					width: 100
				},{
					text: '年龄',
					dataIndex: 'age',
					width: 100
				},{
					text: '生日',
					dataIndex: 'birthday',
					flex: 1
				}
			],
			pkField : "id",
			hidePagingBar: false,
			pageSize: 20,
			loadOnShow: true,
			actionButtons: [{
				text: '编辑',
				iconCls: 'icon-edit',
				handler: function(){
					Message.msg("编辑");
				}
			}],
			actionButtonsSort: [],
			valueMapper: {
				name : function(val, metaData, record, index) {
					//参数说明：val：当前单元格的值，metaData:当前单元格的元数据，
					//record:当前行，index:当前行的下标(从0开始)
//					metaData.style = "background-color: #C7EDCC";
//					console.log(record.data);
//					console.log(index);
					return "<a onclick=\"javascript:alert('"+record.data.id+"')\"><font color='red'>"+val+"</font></a>";
				}
			},
			condition:{
				fields:[{
					text: '用户名',
					name: 'name'
				},{
					text: '生日',
					xtype: 'ins_datefield',
					name: 'name'
				}]
			}
		});
		view.show();
		return null;
	}	
});
</pre>
<h3>类名</h3>
<code>Ins.chooser.ChooserGirdWindow</code>
<h4>别名</h4>
<code>ins_choosergridwindow</code>
<h3>继承自</h3>
<code>Ins.window.Window</code>
<h3>构造对象</h3>
<pre class="brush:js;">
		var view = Ext.create('Ins.chooser.ChooserGirdWindow',{
			//选择后的回调函数
			onSelect: function(selection){
				console.log("确认选择事件");
				console.log(selection);
				//selection拥有以下属性
//				selection.length;
//				selection.idSer;
//				selection.idArr;
//				selection.records;
				alert("选择的id有"+selection.idSer+"名字："+selection.records[0].data.name);
			},
			//选择前
			onBeforeSelect: function(){
				console.log("选择前");
				alert("选择前事件");
				//返回值类型boolean，true：程序继续往下执行，false：程序终止执行后面的操作，不写返回值时和false等效
				return true;
			},
			//展示前清除选中
			beforeShowClear: true,
			
			//以下属性对应普通表格的属性		
			//选择模式：MULTI、SINGLE
			selectMode : "MULTI",	
			url : CTX_PATH + '/module/crudgrid/loadAll',
			//列数组
			fields: ['id','name','age','birthday'],
			//实际列
			gridColumns: [{
					text: 'id',
					dataIndex: 'id',
					width: 230
				},{
					text: '姓名',
					dataIndex: 'name',
					width: 100
				},{
					text: '年龄',
					dataIndex: 'age',
					width: 100
				},{
					text: '生日',
					dataIndex: 'birthday',
					flex: 1
				}
			],
			condition:{
				fields:[{
					text: '用户名',
					name: 'name'
				},{
					text: '生日',
					xtype: 'ins_datefield',
					name: 'name'
				}]
			}
		});
</pre>
<h3>属性</h3>
<table class="table table-bordered table-striped table-hover table-hover">
<thead style="background-color: #555;color: #FFFFFF;">
<tr><th width="50">属性名</th><th width="50">属性值类型</th><th width="50">描述</th><th width="50">默认值</th></tr>
</thead>
<tbody>
<tr>
<td>beforeShowClear</td>
<td>boolean</td>
<td>展示前清除选中</td>
<td>true</td>
</tr>
<tr>
<td>url</td>
<td>String</td>
<td>表格加载数据请求地址</td>
<td>null</td>
</tr>
<tr>
<td>fields</td>
<td>String[]</td>
<td>列数组</td>
<td>[]</td>
</tr>
<tr>
<td>gridColumns</td>
<td>Object[]</td>
<td>实际列</td>
<td>[]</td>
</tr>
<tr>
<td>pkField</td>
<td>string</td>
<td>主键字段</td>
<td>'id'</td>
</tr>
<tr>
<td>loadOnShow</td>
<td>boolean</td>
<td>是否自动加载数据</td>
<td>true</td>
</tr>
<tr>
<td>hidePagingBar</td>
<td>boolean</td>
<td>是否隐藏分页工具</td>
<td>false</td>
</tr>
<tr>
<td>actionButtons</td>
<td>Object[ ]</td>
<td>工具栏按钮</td>
<td>[]</td>
</tr>
<tr>
<td>actionButtonsSort</td>
<td>String[ ]</td>
<td>工具栏按钮排序</td>
<td>[ ]</td>
</tr>
<tr>
<td>valueMapper</td>
<td>Object</td>
<td><pre  class="brush:js;">
valueMapper: {
	name : function(val, metaData, record, index) {
		//参数说明：val：当前单元格的值，metaData:当前单元格的元数据，
		//record:当前行，index:当前行的下标(从0开始)
		return "<a onclick=\"javascript:alert('"+record.data.id+"')\"><font color='red'>"+val+"</font></a>";
	}
},	
</pre></td>
<td>null</td>
</tr>
<tr>
<td>selectMode</td>
<td>String</td>
<td>选择模式：多选MULTI、单选SINGLE</td>
<td>"MULTI"</td>
</tr>
<tr>
<td>condition</td>
<td>Object</td>
<td>
<pre class="brush:js">
condition : {
	fields:[{
		text: '用户名',
		name: 'name'
	},{
		text: '生日',
		xtype: 'ins_datefield',
		name: 'name'
	}],
	onBeforeSearch:function(form){
		console.log(form);
//					alert(form.getField('name').value);
		return true;
	},
	buttonText : "自定义查询",
	columnSize : 1,
	defaultFieldWidth : 200
}		
</pre>	
</td>
<td>{ }</td>
</tr>
</tbody>
</table>

<h3>方法</h3>
<table class="table table-bordered table-striped table-hover table-condensed">
<thead style="background-color: #555;color: #FFFFFF;">
<tr><th>返回值</th><th>方法名称</th><th>描述</th></tr>
</thead>
<tbody>
</tbody>
</table>

<h3>事件</h3>
<table class="table table-bordered table-striped table-hover table-condensed">
<thead style="background-color: #555;color: #FFFFFF;">
<tr><th>返回值</th><th>事件名称</th><th>绑定方法</th><th>描述</th></tr>
</thead>
<tbody>
<tr>
<td>selection</td>
<td>onSelect</td>
<td>function(selection){ }</td>
<td>
<pre>
确认选择后的回调函数
selection拥有以下属性
selection.length;
selection.idSer;
selection.idArr;
selection.records;
</pre>
</td>
</tr>
<tr>
<td>boolean</td>
<td>onBeforeSelect</td>
<td>function(){ }</td>
<td>确认选择前事件。返回值类型boolean，true：程序继续往下执行，false：程序终止执行后面的操作，不写返回值时和false等效</td>
</tr>
</tbody>
</table>



<script type="text/javascript" src="../common/include.js"></script>
</body>
</html>
