package com.insplatform.module.budget.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.budget.model.Budget;
import com.insplatform.module.budget.repository.BudgetRepository;
import com.insplatform.module.budget.service.BudgetService;

@Service
public class BudgetServiceImpl extends BaseServiceImpl<Budget> implements BudgetService{
	
	@Autowired
	private BudgetRepository budgetRepository;

	@Override
	public BaseRepository<Budget> getRepository() {		
		return budgetRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return budgetRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return budgetRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return budgetRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public Budget get(Serializable id) {		
		return budgetRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(Budget entity) {	
		return budgetRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(Budget entity) {		
		budgetRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		budgetRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		budgetRepository.deleteByIds(ids);
	}

	@Override
	public Object loadTree(Condition condition) {
		return budgetRepository.loadTree(condition);
		
	}

}
