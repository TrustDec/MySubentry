package com.insplatform.module.trainingimplement.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.trainingimplement.model.TrainingLog;
import com.insplatform.module.trainingimplement.repository.TrainingLogRepository;
import com.insplatform.module.trainingimplement.service.TrainingLogService;

@Service
public class TrainingLogServiceImpl extends BaseServiceImpl<TrainingLog> implements TrainingLogService{
	
	@Autowired
	private TrainingLogRepository trainingLogRepository;

	@Override
	public BaseRepository<TrainingLog> getRepository() {		
		return trainingLogRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return trainingLogRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return trainingLogRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return trainingLogRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainingLog get(Serializable id) {		
		return trainingLogRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainingLog entity) {	
		return trainingLogRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainingLog entity) {		
		trainingLogRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		trainingLogRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		trainingLogRepository.deleteByIds(ids);
	}

	@Override
	public Serializable save(TrainingLog traininglog, HttpServletRequest request) {
		return trainingLogRepository.save(traininglog, request);
	}

	@Override
	public void update(TrainingLog traininglog, HttpServletRequest request) {
		trainingLogRepository.update(traininglog, request);
	}

}
