package com.insplatform.module.trainingimplement.controller;

import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.trainingimplement.model.TrainingCourseware;
import com.insplatform.module.trainingimplement.service.TrainingCoursewareService;

@Controller
@RequestMapping("/px/trainingcourseware")
public class TrainingCoursewareController extends BaseController{
	
	@Autowired
	private TrainingCoursewareService trainingCoursewareService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"id");
		return trainingCoursewareService.loadAllGrid(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(trainingCoursewareService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(trainingCoursewareService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(TrainingCourseware trainingcourseware, HttpServletRequest request){
//		trainingCoursewareService.save(trainingcourseware, request);
		trainingcourseware.setCreateUserId(this.getCurrentUser(request).getId());
		trainingcourseware.setCreateUserName(this.getCurrentUser(request).getName());	
		Date date = new Date();
		trainingcourseware.setCreateTime(date);
		trainingcourseware.setUpdateTime(date);
		trainingCoursewareService.save(trainingcourseware, request);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(TrainingCourseware trainingcourseware,
		   @RequestParam("id") String id,
		   HttpServletRequest request){
		trainingCoursewareService.update(id,trainingcourseware,request);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		trainingCoursewareService.deleteByIds(ids);
		return this.getMessager().success();
	}
	
	
	/**
	 * 下载视频文件
	 * @param id
	 * @param response
	 */
	@RequestMapping("/downloadAttachment")	
	public void downloadAttachment(@RequestParam("id") String id, HttpServletRequest request, HttpServletResponse response){
		trainingCoursewareService.downloadAttachment(id,request,response);
	}

	
}
