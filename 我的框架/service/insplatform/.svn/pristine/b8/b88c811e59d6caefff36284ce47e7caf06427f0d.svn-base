package com.insplatform.system.dict.repository.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.insframework.common.utils.TextUtil;
import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insframework.system.map.Condition;
import com.insplatform.system.dict.model.Dict;
import com.insplatform.system.dict.repository.DictRepository;

@Repository
public class DictRepositoryImpl extends BaseRepositoryImpl<Dict> implements DictRepository{

	@Override
	public Map<String, Object> loadAll(Condition condition) {	
		String sql = "select t.* from SYS_DICT t where t.is_delete = 'N' ";
		if(condition.containsKey("classifyId")){
			sql += " and t.classify_id = ? ";
		}
		if(condition.containsKey("name")){
			sql += " and t.name like ? ";
			condition.put("name", "%" + condition.get("name") + "%");
		}
		sql += " order by t.order_index ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public Dict get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(Dict entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(Dict entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {
		if(ids.length > 0){
			String [] sqls = new String[ids.length];
			for(int i=0; i<sqls.length; i++){
				sqls[i] = "update SYS_DICT set is_delete = 'Y' where id = '"+ids[i]+"'"; 
			}
			jdbcAssistant.batchUpdate(sqls);
		}
		
	}

	@Override
	public List<Map<String, Object>> loadDictByClassify(String code) {
		return this.loadDictByClassify(code, null);
	}
	
	@Override
	public List<Map<String, Object>> loadDictByClassify(String code, String valueEqText) {
		String sql = null;
		if (TextUtil.isEmpty(valueEqText)) {
			sql = "select t.*,t.name as text,t.id as value from SYS_DICT t " +
				" where t.is_delete = 'N' and t.classify_id = " +
				" (select id from SYS_DICT_CLASSIFY where code = '"+code+"') " +
				" order by t.order_index";
		}else {
			sql = "select t.*,t.name as text,t.name as value from SYS_DICT t " +
				" where t.is_delete = 'N' and t.classify_id = " +
				" (select id from SYS_DICT_CLASSIFY where code = '"+code+"') " +
				" order by t.order_index";
		}
		return jdbcAssistant.query(sql);
	}
	
}
