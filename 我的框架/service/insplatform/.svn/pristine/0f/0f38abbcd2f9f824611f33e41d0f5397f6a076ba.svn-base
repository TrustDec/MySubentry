package com.insplatform.module.yeardemand.controller;

import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.system.base.controller.BaseController;
import com.insframework.system.curruser.CurrentUser;
import com.insframework.system.map.Condition;
import com.insplatform.module.yeardemand.model.YearDemand;
import com.insplatform.module.yeardemand.service.YearDemandService;

@Controller
@RequestMapping("/px/yeardemand")
public class YearDemandController extends BaseController{
	
	@Autowired
	private YearDemandService yearDemandService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"year","title","release","createUserName");
		return yearDemandService.loadAllGrid(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(yearDemandService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(yearDemandService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(YearDemand yeardemand, HttpServletRequest request){
		CurrentUser user = this.getCurrentUser(request);
		yeardemand.setCreateUserId(user.getId());
		yeardemand.setCreateUserName(user.getName());
		yeardemand.setCreateTime(new Date());
		yeardemand.setRelease("N");
		String id = yearDemandService.save(yeardemand)+"";
		return this.getMessager().success().put("id", id);
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){		
		YearDemand yeardemand = yearDemandService.get(id);
		this.bindObject(request, yeardemand);
		yeardemand.setUpdateTime(new Date());
		yearDemandService.update(yeardemand);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		Map<String, Object> map = yearDemandService.deleteByIdsx(ids);
		map.putAll(this.getMessager().success());
		return map;
	}
	
	/**
	 * 发布
	 * @param request
	 * @return
	 */
	@RequestMapping("/release")
	public @ResponseBody Map<String, Object> release(@RequestParam("id") String id,HttpServletRequest request){
		String result = yearDemandService.updateReleaseOrCancel(id,"release");
		return this.getMessager().success().put("result", result);
	}
	
	/**
	 * 发布
	 * @param request
	 * @return
	 */
	@RequestMapping("/cancelRelease")
	public @ResponseBody Map<String, Object> cancelRelease(@RequestParam("id") String id,HttpServletRequest request){
		String result = yearDemandService.updateReleaseOrCancel(id,"cancel");
		return this.getMessager().success().put("result", result);
	}

	
}
