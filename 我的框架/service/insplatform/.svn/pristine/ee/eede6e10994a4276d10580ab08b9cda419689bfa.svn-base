package com.insplatform.module.worktype.repository.impl;

import java.io.Serializable;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.insframework.system.base.repository.impl.BaseRepositoryImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.worktype.model.Worktype;
import com.insplatform.module.worktype.repository.WorktypeRepository;

@Repository
public class WorktypeRepositoryImpl extends BaseRepositoryImpl<Worktype> implements WorktypeRepository{

	@Override
	public Map<String, Object> loadAll(Condition condition) {	
		String sql = "select t.* from PX_WORKTYPE t where 1=1 ";
		if(condition.containsKey("classifyId")){
			sql += " and t.classify_id = ? ";
		}
		sql += " order by t.name ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public Worktype get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(Worktype entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(Worktype entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}

	@Override
	public Map<String, Object> loadTree(Condition condition) {
		String sql = "((select t.id,t.name as text, bc.id as pid from PX_WORKTYPE t join PX_WORKTYPE_CLASSIFY bc on(t.classify_id = bc.id)) union (select t.id,t.name as text, null as pid from PX_WORKTYPE_CLASSIFY t ))";
		return treeService.loadData(sql);	
	}
	
}
