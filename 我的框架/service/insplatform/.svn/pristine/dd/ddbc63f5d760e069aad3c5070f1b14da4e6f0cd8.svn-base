package com.insplatform.module.training.curriculum.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.training.curriculum.model.TrainingCurriculumTeacher;
import com.insplatform.module.training.curriculum.repository.TrainingCurriculumTeacherRepository;
import com.insplatform.module.training.curriculum.service.TrainingCurriculumTeacherService;

@Service
public class TrainingCurriculumTeacherServiceImpl extends BaseServiceImpl<TrainingCurriculumTeacher> implements TrainingCurriculumTeacherService{
	
	@Autowired
	private TrainingCurriculumTeacherRepository trainingCurriculumTeacherRepository;

	@Override
	public BaseRepository<TrainingCurriculumTeacher> getRepository() {		
		return trainingCurriculumTeacherRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return trainingCurriculumTeacherRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return trainingCurriculumTeacherRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return trainingCurriculumTeacherRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainingCurriculumTeacher get(Serializable id) {		
		return trainingCurriculumTeacherRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainingCurriculumTeacher entity) {	
		return trainingCurriculumTeacherRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainingCurriculumTeacher entity) {		
		trainingCurriculumTeacherRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		trainingCurriculumTeacherRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		trainingCurriculumTeacherRepository.deleteByIds(ids);
	}

	@Override
	public void addTeacher(String[] ids, Condition condition) {
		trainingCurriculumTeacherRepository.addTeacher(ids, condition);
		
	}

}
