package com.insplatform.module.live.websocket;



import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import com.insframework.system.context.App;
import com.insframework.system.curruser.CurrentUser;

public class LiveEndPoint extends TextWebSocketHandler{
	
	Logger logger = Logger.getLogger(LiveEndPoint.class);
	
	@Override
	protected void handleTextMessage(WebSocketSession session,  
            TextMessage message) throws Exception {  
        super.handleTextMessage(session, message);  
        TextMessage returnMessage = new TextMessage(message.getPayload()+" received at server");  
        System.out.println(message.getPayload());       
        session.sendMessage(returnMessage);  
        //session.close();
    }

	@Override
	public void afterConnectionClosed(WebSocketSession session,
			CloseStatus status) throws Exception {
		System.out.println("close");
		super.afterConnectionClosed(session, status);
	}

	@Override
	public void afterConnectionEstablished(WebSocketSession session)
			throws Exception {
		System.out.println("open");
		
	//	Map map = session.getAttributes();
		
		
		HttpSession httpsession = (HttpSession) session.getAttributes().get("HTTP_SESSION");		
		CurrentUser user = (CurrentUser) httpsession.getAttribute(App.CURRENT_USER);
		System.out.println("当前用户为 "+user.getName());
		super.afterConnectionEstablished(session);
	} 

}

