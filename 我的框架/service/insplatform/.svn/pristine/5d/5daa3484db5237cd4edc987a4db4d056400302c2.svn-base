package com.insplatform.module.trainbaseexamplace.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.trainbaseexamplace.model.TrainbaseExamPlace;
import com.insplatform.module.trainbaseexamplace.repository.TrainbaseExamPlaceRepository;
import com.insplatform.module.trainbaseexamplace.service.TrainbaseExamPlaceService;

@Service
public class TrainbaseExamPlaceServiceImpl extends BaseServiceImpl<TrainbaseExamPlace> implements TrainbaseExamPlaceService{
	
	@Autowired
	private TrainbaseExamPlaceRepository trainbaseExamPlaceRepository;

	@Override
	public BaseRepository<TrainbaseExamPlace> getRepository() {		
		return trainbaseExamPlaceRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return trainbaseExamPlaceRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return trainbaseExamPlaceRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return trainbaseExamPlaceRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainbaseExamPlace get(Serializable id) {		
		return trainbaseExamPlaceRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainbaseExamPlace entity) {	
		return trainbaseExamPlaceRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainbaseExamPlace entity) {		
		trainbaseExamPlaceRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		trainbaseExamPlaceRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		trainbaseExamPlaceRepository.deleteByIds(ids);
	}

	@Override
	public boolean beforeDeleteCheck(String[] ids) {
		return trainbaseExamPlaceRepository.beforeDeleteCheck(ids);
	}

}
