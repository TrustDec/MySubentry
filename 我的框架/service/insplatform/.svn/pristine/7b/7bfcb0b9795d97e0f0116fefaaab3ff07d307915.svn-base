package com.insplatform.module.question.controller;

import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.insframework.system.base.controller.BaseController;
import com.insplatform.module.question.model.Question;
import com.insplatform.module.question.service.QuestionAnswerService;
import com.insplatform.module.question.service.QuestionService;

@Controller
@RequestMapping("/px/question")
public class QuestionController extends BaseController{
	
	@Autowired
	private QuestionService questionService;
	
	@Autowired
	private QuestionAnswerService questionAnswerService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){		
		return questionService.loadAllGrid(this.getCondition(request, "title", "createUserName", "type", "difficulty", "kpointName"));
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){		
		return this.getMessager().success().data(questionService.loadAllList(this.getCondition(request)));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(questionService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(Question question, @RequestParam("answer") String answer, HttpServletRequest request){
		question.setCreateUserId(this.getCurrentUser(request).getId());
		question.setCreateUserName(this.getCurrentUser(request).getName());
		Date date = new Date();
		question.setCreateTime(date);
		question.setUpdateTime(date);
		questionService.save(question, answer);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
			   @RequestParam("id") String id,
			   @RequestParam("answer") String answer,
			   HttpServletRequest request){		
		Question question = questionService.get(id);
		this.bindObject(request, question);		
		question.setUpdateTime(new Date());
		questionService.update(question, answer);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		questionService.deleteByIds(ids);
		return this.getMessager().success();
	}
	
	/**
	 * 获取答案
	 * @param id
	 * @return
	 */
	@RequestMapping("/loadAnswer")
	public @ResponseBody Map<String, Object> loadAnswer(@RequestParam("id") String id){
		List<Map<String, Object>> answer = questionAnswerService.loadAnswerByQueId(id);		
		return this.getMessager().success().put("answer", answer);
	}

	
}
