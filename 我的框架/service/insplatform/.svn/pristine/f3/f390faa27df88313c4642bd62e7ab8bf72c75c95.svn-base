package com.insplatform.module.trainingimplement.service;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import com.insframework.system.base.service.BaseService;
import com.insframework.system.map.Condition;
import com.insplatform.module.trainingimplement.model.TrainingGuide;

public interface TrainingGuideService extends BaseService<TrainingGuide>{
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	Map<String, Object> loadAllGrid(Condition condition);
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	List<Map<String, Object>> loadAllList(Condition condition);
	
	/**
	 * 加载单条数据
	 * @param request
	 * @param response
	 * @return
	 */
	Map<String, Object> load(String id);

	/**
	 * 加载地址图片
	 * @return
	 */
	Map<String, Object> loadPositon(Condition condition);

	
	Serializable save(TrainingGuide trainingguide, HttpServletRequest request);

	/**
	 * 
	 * @param address 
	 * @param name 
	 * @param trainSchemeId 
	 * @param trainGuideId 
	 * @param startTime
	 * @param dateEnd 
	 */
	void addEat(String trainGuideId, String trainSchemeId, String name, String trainBaseEatId, String address, String startTime, String dateEnd);

	/**
	 * 
	 * @param condition
	 * @return
	 */
	Map<String, Object> loadAllGridEat(Condition condition);

	/**
	 * 
	 * @param id
	 * @return
	 */
	Map<String, Object> loadEat(String id);

	/**
	 * 
	 * @param id
	 * @param trainGuideId
	 * @param trainSchemeId
	 * @param name
	 * @param address
	 * @param startTime
	 * @param dateEnd
	 */
	void updateEat(String id, String trainGuideId, String trainSchemeId,
			String name, String trainBaseEatId, String address, String startTime, String dateEnd);

	/**
	 * 
	 * @param ids
	 */
	void deleteEat(String[] ids);

	/**
	 * 
	 * @param id
	 * @return
	 */
	Map<String, Object> loadWeater(String id);

	/**
	 * 
	 * @param ids
	 */
	void deleteWeater(String[] ids);

	/**
	 * 
	 * @param trainGuideId
	 * @param trainSchemeId
	 * @param date
	 * @param type
	 * @param lowTemperature
	 * @param highTemperature
	 */
	void addWeater(String trainGuideId, String trainSchemeId, String date,
			String type, String lowTemperature, String highTemperature);

	/**
	 * 
	 * @param id
	 * @param trainGuideId
	 * @param trainSchemeId
	 * @param date
	 * @param type
	 * @param lowTemperature
	 * @param highTemperature
	 */
	void updateWeater(String id, String trainGuideId, String trainSchemeId,
			String date, String type, String lowTemperature,
			String highTemperature);

	/**
	 * 
	 * @param condition
	 * @return
	 */
	Map<String, Object> loadAllGridWeater(Condition condition);
}
