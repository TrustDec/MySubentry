package com.insplatform.module.course.coursekpointresource.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.course.coursekpointresource.model.CourseKpointResource;
import com.insplatform.module.course.coursekpointresource.service.CourseKpointResourceService;

@Controller
@RequestMapping("/px/course/coursekpointresource")
public class CourseKpointResourceController extends BaseController{
	
	@Autowired
	private CourseKpointResourceService courseKpointResourceService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"courseKpointId","name","difficulty","type");
		return courseKpointResourceService.loadAllGrid(condition);
	}
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGridBySelect")
	public @ResponseBody Map<String, Object> loadAllGridBySelect(@RequestParam("courseKpointId") String courseKpointId,
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"courseKpointId","name","difficulty","type");
		return courseKpointResourceService.loadAllGridBySelect(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(courseKpointResourceService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(courseKpointResourceService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(@RequestParam("courseKpointId") String courseKpointId, HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		courseKpointResourceService.saveBatch(courseKpointId,ids);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){		
		CourseKpointResource coursekpointresource = courseKpointResourceService.get(id);
		this.bindObject(request, coursekpointresource);
		courseKpointResourceService.update(coursekpointresource);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(@RequestParam("courseKpointId") String courseKpointId, HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		courseKpointResourceService.deleteByIds(courseKpointId, ids);
		return this.getMessager().success();
	}

	/**
	 * 上移或者下移
	 * @param request
	 * @return
	 */
	@RequestMapping("/kpointUpOrDown")	
	public @ResponseBody Map<String, Object> kpointUpOrDown(
			@RequestParam("resourceId") String resourceId,
			@RequestParam("courseKpointId") String courseKpointId,
			@RequestParam("type") String type,
			HttpServletRequest request){
		courseKpointResourceService.updateKpointUpOrDown(resourceId,courseKpointId,type);
		return this.getMessager().success();
	}

	
}
