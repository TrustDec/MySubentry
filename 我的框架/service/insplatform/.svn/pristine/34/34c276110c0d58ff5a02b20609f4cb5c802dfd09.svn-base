package com.insplatform.module.training.stop.service.impl;

import java.io.Serializable;
import java.util.*;

import javax.servlet.http.HttpServletRequest;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.insframework.common.utils.TextUtil;
import com.insframework.component.service.file.UploadService;
import com.insframework.component.service.file.bean.FileBean;
import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.training.stop.model.TrainingStopSpeak;
import com.insplatform.module.training.stop.repository.TrainingStopSpeakRepository;
import com.insplatform.module.training.stop.service.TrainingStopSpeakService;

@Service
public class TrainingStopSpeakServiceImpl extends BaseServiceImpl<TrainingStopSpeak> implements TrainingStopSpeakService{
	
	@Autowired
	private TrainingStopSpeakRepository trainingStopSpeakRepository;

	
	@Autowired
	private UploadService uploadService;
	
	@Override
	public BaseRepository<TrainingStopSpeak> getRepository() {		
		return trainingStopSpeakRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return trainingStopSpeakRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return trainingStopSpeakRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return trainingStopSpeakRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainingStopSpeak get(Serializable id) {		
		return trainingStopSpeakRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainingStopSpeak entity) {	
		return trainingStopSpeakRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainingStopSpeak entity) {		
		trainingStopSpeakRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		trainingStopSpeakRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		trainingStopSpeakRepository.deleteByIds(ids);
	}

	@Override
	public Serializable save(TrainingStopSpeak obj, HttpServletRequest request) {
		MultipartFile file = uploadService.getMultipartFile(request, "file");
		obj.setFileName(file.getOriginalFilename());
		FileBean fileBean = null;
		try {
			fileBean = uploadService.uploadByDoc(file);			
		} catch (Exception e) {		
			e.printStackTrace();
		}
		obj.setFilePath(fileBean.getUrl());
		String id = (String) super.save(obj);
		return id;
	}

	@Override
	public void update(TrainingStopSpeak obj, HttpServletRequest request) {
		MultipartFile file = uploadService.getMultipartFile(request, "file");
		if(TextUtil.isNotEmpty(file.getOriginalFilename()))
		{
			obj.setFileName(file.getOriginalFilename());
			FileBean fileBean = null;
			try {
				fileBean = uploadService.uploadByDoc(file);			
			} catch (Exception e) {		
				e.printStackTrace();
			}
			obj.setFilePath(fileBean.getUrl());
		}
		super.update(obj);
		
	}

}
