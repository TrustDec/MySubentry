package com.insplatform.module.worktype.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.worktype.model.Worktype;
import com.insplatform.module.worktype.service.WorktypeService;

@Controller
@RequestMapping("/px/worktype")
public class WorktypeController extends BaseController{
	
	@Autowired
	private WorktypeService worktypeService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAll")
	public @ResponseBody Map<String, Object> loadAll(
			HttpServletRequest request, HttpServletResponse response){		
		return worktypeService.loadAll(this.getCondition(request, "classifyId"));
	}
	
	/**
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(worktypeService.get(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(Worktype worktype){
		worktypeService.save(worktype);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){		
		Worktype worktype = worktypeService.get(id);
		this.bindObject(request, worktype);
		worktypeService.update(worktype);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		worktypeService.deleteByIds(ids);
		return this.getMessager().success();
	}
	/**
	 * 加载工种选择器，树形展示
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadTree")
	public @ResponseBody Map<String, Object> loadTree(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return worktypeService.loadTree(condition);
	}

	
}
