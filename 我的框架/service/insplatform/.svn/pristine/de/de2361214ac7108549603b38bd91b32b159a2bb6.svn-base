package com.insplatform.module.osta.worktype.service.impl;

import java.io.Serializable;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.osta.worktype.model.OstaWorktype;
import com.insplatform.module.osta.worktype.repository.OstaWorktypeRepository;
import com.insplatform.module.osta.worktype.service.OstaWorktypeService;

@Service
public class OstaWorktypeServiceImpl extends BaseServiceImpl<OstaWorktype> implements OstaWorktypeService{
	
	@Autowired
	private OstaWorktypeRepository ostaworktypeRepository;

	@Override
	public BaseRepository<OstaWorktype> getRepository() {		
		return ostaworktypeRepository;
	}
	
	@Override
	public Map<String, Object> loadAll(Condition condition) {			
		return ostaworktypeRepository.loadAll(condition);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public OstaWorktype get(Serializable id) {		
		return ostaworktypeRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(OstaWorktype entity) {	
		return ostaworktypeRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(OstaWorktype entity) {		
		ostaworktypeRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		ostaworktypeRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		ostaworktypeRepository.deleteByIds(ids);
	}

	@Override
	public Map<String, Object> loadAllTree(Condition condition) {
		return ostaworktypeRepository.loadAllTree(condition);
	}

}
