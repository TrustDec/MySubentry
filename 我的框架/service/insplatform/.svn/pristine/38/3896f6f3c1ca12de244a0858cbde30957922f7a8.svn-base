package com.insplatform.module.trainingplan.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.trainingplan.model.TrainingPlan;
import com.insplatform.module.trainingplan.repository.TrainingPlanRepository;
import com.insplatform.module.trainingplan.service.TrainingPlanService;

@Service
public class TrainingPlanServiceImpl extends BaseServiceImpl<TrainingPlan> implements TrainingPlanService{
	
	@Autowired
	private TrainingPlanRepository trainingPlanRepository;

	@Override
	public BaseRepository<TrainingPlan> getRepository() {		
		return trainingPlanRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return trainingPlanRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return trainingPlanRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return trainingPlanRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainingPlan get(Serializable id) {		
		return trainingPlanRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainingPlan entity) {	
		return trainingPlanRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainingPlan entity) {		
		trainingPlanRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		trainingPlanRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		trainingPlanRepository.deleteByIds(ids);
	}

	@Override
	public void addWithCompanyName(TrainingPlan entity) {
		trainingPlanRepository.addWithCompanyName(entity);
	}

	@Override
	public boolean beforeInsertCheck(String id, String year, String month) {
		return trainingPlanRepository.beforeInsertCheck(id, year, month);
	}
	
	@Override
	public boolean beforeUpdAndDelCheck(String[] planIds) {
		return trainingPlanRepository.beforeUpdAndDelCheck(planIds);
	}

}
