package com.insplatform.module.trainingimplement.service.impl;

import java.io.Serializable;
import java.util.*;

import javax.servlet.http.HttpServletRequest;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.trainingimplement.model.TrainingInformAttachment;
import com.insplatform.module.trainingimplement.repository.TrainingInformAttachmentRepository;
import com.insplatform.module.trainingimplement.service.TrainingInformAttachmentService;

@Service
public class TrainingInformAttachmentServiceImpl extends BaseServiceImpl<TrainingInformAttachment> implements TrainingInformAttachmentService{
	
	@Autowired
	private TrainingInformAttachmentRepository trainingInformAttachmentRepository;

	@Override
	public BaseRepository<TrainingInformAttachment> getRepository() {		
		return trainingInformAttachmentRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return trainingInformAttachmentRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return trainingInformAttachmentRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return trainingInformAttachmentRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainingInformAttachment get(Serializable id) {		
		return trainingInformAttachmentRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainingInformAttachment entity) {	
		return trainingInformAttachmentRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainingInformAttachment entity) {		
		trainingInformAttachmentRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		trainingInformAttachmentRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		trainingInformAttachmentRepository.deleteByIds(ids);
	}

	@Override
	public Serializable save(TrainingInformAttachment trainingInformAttachment,
			HttpServletRequest request) {
		return trainingInformAttachmentRepository.save(trainingInformAttachment,request);
	}

	@Override
	public void update(TrainingInformAttachment trainingInformAttachment,
			HttpServletRequest request) {
		trainingInformAttachmentRepository.update(trainingInformAttachment,request);
	}

	@Override
	public void isRelease(String id) {
		trainingInformAttachmentRepository.isRelease(id);
	}

	@Override
	public Map<String, Object> loadAttachment(String id) {
		return trainingInformAttachmentRepository.loadAttachment(id);
	}

}
