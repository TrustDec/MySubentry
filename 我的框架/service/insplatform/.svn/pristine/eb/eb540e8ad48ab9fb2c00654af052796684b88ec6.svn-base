package com.insplatform.module.teacher.controller;

import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.system.base.controller.BaseController;
import com.insplatform.module.teacher.model.Teacher;
import com.insplatform.module.teacher.service.TeacherService;

@Controller
@RequestMapping("/px/teacher")
public class TeacherController extends BaseController{
	
	@Autowired
	private TeacherService teacherService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		return teacherService.loadAllGrid(this.getCondition(request, "name","lesson","tsource","ttype","approval"));
	}
	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(teacherService.load(id));		
	}

	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){		
		Teacher teacher = teacherService.get(id);
		this.bindObject(request, teacher);
		teacher.setUpdateTime(new Date());
		teacherService.update(teacher);
		return this.getMessager().success();
	}
	

	
	/**
	 * 删除教师
	 * @param request
	 * @return
	 */
	@RequestMapping("/deleteByTeachIds")	
	public @ResponseBody Map<String, Object> deleteByTeachIds(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		teacherService.deleteByTIds(ids);
		return this.getMessager().success();
	}
	
	/**
	 * 新增教师信息
	 * 
	 * @param dict
	 * @return
	 */
	@RequestMapping("/addTeacher")	
	public @ResponseBody Map<String, Object> addTeacher(HttpServletRequest request){
		String[] userIds = this.getSelectedItems(request);
		teacherService.saveTeachers(userIds,request);		
		return this.getMessager().success();
	}
	
	/**
	 * 更新老师审批状态
	 * 
	 * @param dict
	 * @return
	 */
	@RequestMapping("/agreeTeacherApproval")
	public @ResponseBody Map<String, Object> agreeTeacherApproval(
		   HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		for (String id : ids) {
			Teacher teacher = teacherService.get(id);
			this.bindObject(request, teacher);
			teacher.setUpdateTime(new Date());
			teacher.setApproval("1");
			teacherService.update(teacher);
		}
		
		return this.getMessager().success();
	}
	
	/**
	 * 更新老师审批状态
	 * 
	 * @param dict
	 * @return
	 */
	@RequestMapping("/disagreeTeacherApproval")
	public @ResponseBody Map<String, Object> disagreeTeacherApproval(
		   HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		for (String id : ids) {
			Teacher teacher = teacherService.get(id);
			this.bindObject(request, teacher);
			teacher.setUpdateTime(new Date());
			teacher.setApproval("0");
			teacherService.update(teacher);
		}
		
		return this.getMessager().success();
	}
	
	/**
	 * 加载审批通过教师信息Chooser
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAgreeTeacherGrid")
	public @ResponseBody Map<String, Object> loadAgreeTeacherGrid(
			HttpServletRequest request, HttpServletResponse response){
		return teacherService.loadAgreeTeacherGrid(this.getCondition(request,"name","lesson"));
	}
	


	
}
