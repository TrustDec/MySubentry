package com.insplatform.module.training.cost.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.insframework.system.base.controller.BaseController;
import com.insframework.system.map.Condition;
import com.insplatform.module.training.cost.model.Trainingcost;
import com.insplatform.module.training.cost.service.TrainingcostService;

@Controller
@RequestMapping("/px/trainingcost")
public class TrainingcostController extends BaseController {

	@Autowired
	private TrainingcostService trainingcostService;

	/**
	 * 加载数据
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody
	Map<String, Object> loadAllGrid(HttpServletRequest request,
			HttpServletResponse response) {
		Condition condition = this.getCondition(request, "pxTrainingScheme",
				"budgetClassify", "budget");
		return trainingcostService.loadAllGrid(condition);
	}

	/**
	 * 加载数据
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody
	Map<String, Object> loadAllList(HttpServletRequest request,
			HttpServletResponse response) {
		Condition condition = this.getCondition(request);
		return this.getMessager().success()
				.data(trainingcostService.loadAllList(condition));
	}

	/**
	 * 加载单条数据
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody
	Map<String, Object> load(@RequestParam("id") String id) {
		return this.getMessager().success()
				.data(trainingcostService.load(id));
	}

	/**
	 * 新增
	 * 
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")
	public @ResponseBody
	Map<String, Object> add(Trainingcost classreportbudget, Double sub,
			HttpServletRequest request) {
		classreportbudget.setSubtotal(sub);
		trainingcostService.save(classreportbudget);
		return this.getMessager().success();
	}

	/**
	 * 编辑
	 * 
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")
	public @ResponseBody
	Map<String, Object> update(@RequestParam("id") String id, Double sub,
			HttpServletRequest request) {
		Trainingcost classreportbudget = trainingcostService.get(id);
		classreportbudget.setSubtotal(sub);
		this.bindObject(request, classreportbudget);
		trainingcostService.update(classreportbudget);
		return this.getMessager().success();
	}

	/**
	 * 删除
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")
	public @ResponseBody
	Map<String, Object> delete(HttpServletRequest request) {
		String[] ids = this.getSelectedItems(request);
		trainingcostService.deleteByIds(ids);
		return this.getMessager().success();
	}
	
	@Override
	protected void initBinder(WebDataBinder binder) {
	}

}
