package com.insplatform.module.trainbaseexamplace.repository.impl;

import java.io.Serializable;
import java.util.*;

import org.springframework.stereotype.Repository;

import com.insframework.system.base.repository.impl.BaseRepositoryImpl;

import com.insframework.system.map.Condition;
import com.insplatform.module.trainbaseexamplace.model.TrainbaseExamRoom;
import com.insplatform.module.trainbaseexamplace.repository.TrainbaseExamRoomRepository;


@Repository
public class TrainbaseExamRoomRepositoryImpl extends BaseRepositoryImpl<TrainbaseExamRoom> implements TrainbaseExamRoomRepository{

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {	
		String sql = "select t.* from PX_TRAINBASE_EXAM_ROOM t where 1=1";
		if(condition.containsKey("placeId")){
			sql += " and t.place_id = ? ";
			condition.put("placeId", condition.get("placeId"));
		}
		
		if(condition.containsKey("name")){
			sql += " and t.name like ? ";
			condition.put("name", "%" + condition.get("name") + "%" );
		}
		if(condition.containsKey("examType")){
			sql += " and t.exam_type = ? ";
			condition.put("examType", condition.get("examType"));
		}
		if(condition.containsKey("holdNum")){
			sql += " and t.hold_num = ? ";
			condition.put("holdNum", condition.get("holdNum"));
		}
		sql += " order by t.update_time desc ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {	
		String sql = "select t.* from PX_TRAINBASE_EXAM_ROOM t ";
		return jdbcAssistant.query(sql, condition.valueArray());
	}
	
	@Override
	public Map<String, Object> load(String id) {	
		String sql = "select t.* from PX_TRAINBASE_EXAM_ROOM t where t.id = ? ";
		return jdbcAssistant.queryOne(sql, new Object[]{id});
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TrainbaseExamRoom get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TrainbaseExamRoom entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TrainbaseExamRoom entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}
	
}
