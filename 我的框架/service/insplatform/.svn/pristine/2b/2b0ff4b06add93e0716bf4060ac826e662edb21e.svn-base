package com.insplatform.system.authz.repository;


import java.util.List;
import java.util.Map;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.map.Condition;
import com.insplatform.system.authz.model.Authz;

public interface AuthzRepository extends BaseRepository<Authz>{
	
	/**
	 * 添加菜单权限
	 * @param type
	 */
	void addAuthzMenu(String menuId);
	
	/**
	 * 添加操作权限
	 * @param type
	 */
	void addAuthzOperate(String operateId);	
	
		
	/**
	 * 获取用户的权限id集合（不包含角色）
	 * @param userId
	 * @return
	 */
	List<String> loadUserAuthzIds(String userId);
	
	/**
	 * 获取角色的权限id集合
	 * @param userId
	 * @return
	 */
	List<String> loadRoleAuthzIds(String roleIds);	
	
	/**
	 * 获取用户的所有权限id集合(包括用户的相关角色)
	 * @param userId
	 * @return
	 */
	List<String> loadUserAllAuthzIds(String userId);	
	
	
	/**
	 * 获取所有的权限资源列表
	 * @param userId
	 */
	List<Map<String, Object>> loadAllAuthzResource(Condition condition);
	
	/**
	 * 获取用户所有的权限资源列表
	 * @param userId
	 */
	List<Map<String, Object>> loadUserAllAuthzResource(String userId);
	
	/**
	 * 加载用户操作的map  key：code value：{resourcePath: xxx, name:　xxx}
	 * @param userId
	 * @return
	 */
	Map<String, Object> loadUserOperateMap(String userId);
	
	/**
	 * 加载所有操作的map  key：code value：{resourcePath: xxx, name:　xxx}
	 * @param userId
	 * @return
	 */
	Map<String, Object> loadAllOperateMap(Condition condition);
	
	/**
	 * 给角色添加权限
	 * @param id
	 * @param authzIds
	 */
	void addRoleAuthz(String roleId, String... authzIds);
	
	/**
	 * 删除角色下的权限
	 * @param id
	 * @param authzIds
	 */
	void deleteRoleAuthz(String roleId, String... authzIds);
	
	/**
	 * 给用户添加权限
	 * @param id
	 * @param authzIds
	 */
	void addUserAuthz(String userId, String... authzIds);
	
	/**
	 * 删除用户下的权限
	 * @param id
	 * @param authzIds
	 */
	void deleteUserAuthz(String userId, String... authzIds);
	
	/**
	 * 根据菜单id删除权限
	 * @param id
	 */
	void deleteAuthzByMenuId(String id);
	
	/**
	 * 根据操作id删除权限
	 * @param operateId
	 */
	void deleteAuthzByOperateId(String operateId);
	
}
