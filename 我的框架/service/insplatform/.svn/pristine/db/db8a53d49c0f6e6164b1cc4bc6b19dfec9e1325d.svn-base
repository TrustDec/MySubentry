package com.insplatform.system.log.service;

import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.common.spring.jdbc.JdbcAssistant;
import com.insframework.common.utils.TextUtil;
import com.insframework.component.service.ext.grid.GridService;
import com.insframework.system.curruser.CurrentUser;
import com.insframework.system.curruser.UserSession;
import com.insframework.system.map.Condition;
import com.insplatform.system.menu.repository.MenuRepository;
import com.insplatform.system.user.service.UserBizDataAuthzService;

/**
 * 日志服务
 * @author guom
 *
 */
@Service
public class LogService {
	
	@Autowired
	private GridService gridService;
	
	@Autowired
	private JdbcAssistant jdbcAssistant;
	
	@Autowired
	private MenuRepository menuRepository;
	
	@Autowired
	private UserBizDataAuthzService userBizDataAuthzService;
	
	/**
	 * 加载所有系统操作日志
	 * @param request
	 * @param condition
	 * @return
	 */
	public Map<String, Object> loadAllSysLog(Condition condition){
		String sql = "select * from ("+
					"select t.id,t.create_user_id,t.create_user_name,t.create_time,t.ip,u.account,"
					 +" t.operate_id,t.operate_code,t.params,t.exec_timemillis,o.name as operate_name,m.name as menu_name," 
					 +" u.org_name, " 
					 +" u.company_name "
					 +" from SYS_LOG t "
					 +" left join Sys_Operate o on t.operate_id = o.id "
					 +" left join Sys_Menu m on o.menu_id = m.id" +
					 " left join V_SYS_USER_INFO u on u.id = t.create_user_id " +		
					 ") "+
					 " where 1=1 ";		
		if(condition.containsKey("menuName")){
			sql += " and menu_name like ? ";
			condition.put("menuName", "%" + condition.get("menuName") + "%");
		}
		if(condition.containsKey("operateName")){
			sql += " and operate_name like ? ";
			condition.put("operateName", "%" + condition.get("operateName") + "%");
		}	
		if(condition.containsKey("createUserName")){
			sql += " and create_user_name like ? ";
			condition.put("createUserName", "%" + condition.get("createUserName") + "%");
		}
		if(condition.containsKey("account")){
			sql += " and account like ? ";
			condition.put("account", "%" + condition.get("account") + "%");
		}
		
		if(condition.containsKey("orgName")){
			sql += " and (org_name like '%"+condition.get("orgName")+"%' or company_name like '%"+condition.get("orgName")+"%') ";
			condition.remove("orgName");
		}

		//权限控制
		sql = userBizDataAuthzService.buildUserBizDataAuthzUserSql(sql, "create_user_id", condition.getCurrentUser());
		
		sql += " order by create_time desc ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	/**
	 * 加载所有错误日志
	 * @param request
	 * @param condition
	 * @return
	 */
	public Map<String, Object> loadAllErrorLog(Condition condition){
		String sql = "select * from ( " +
				 "select t.id,t.create_user_id,t.create_user_name,t.create_time,t.ip,t.error_details,u.account,"
				 +" t.operate_id,t.operate_code,t.params,t.exec_timemillis,nvl(o.name,'系统错误') as operate_name,nvl(m.name,'系统错误') as menu_name,"
				 +" u.org_name, " 
				 +" u.company_name "				
				 +" from SYS_LOG_ERROR t "
				 +" left join Sys_Operate o on t.operate_id = o.id "
				 +" left join Sys_Menu m on o.menu_id = m.id" +
				 " left join V_SYS_USER_INFO u on u.id = t.create_user_id " +				
				 " ) " +
				 " where 1=1 ";				
		if(condition.containsKey("menuName")){
			sql += " and menu_name like ? ";
			condition.put("menuName", "%" + condition.get("menuName") + "%");
		}
		if(condition.containsKey("operateName")){
			sql += " and operate_name like ? ";
			condition.put("operateName", "%" + condition.get("operateName") + "%");
		}	
		if(condition.containsKey("createUserName")){
			sql += " and create_user_name like ? ";
			condition.put("createUserName", "%" + condition.get("createUserName") + "%");
		}
		if(condition.containsKey("account")){
			sql += " and account like ? ";
			condition.put("account", "%" + condition.get("account") + "%");
		}
		
		if(condition.containsKey("orgName")){
			sql += " and (org_name like '%"+condition.get("orgName")+"%' or company_name like '%"+condition.get("orgName")+"%') ";
			condition.remove("orgName");
		}
		
		//权限控制
		sql = userBizDataAuthzService.buildUserBizDataAuthzUserSql(sql, "create_user_id", condition.getCurrentUser());
		
		sql += " order by create_time desc ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}
	
	/**
	 * 加载菜单访问日志
	 * @param request
	 * @param condition
	 * @return
	 */
	public Map<String, Object> loadAllMenuLog(Condition condition){
		
		String sql =  "select t.id,t.create_user_id,t.create_user_name,t.create_time,t.ip,t.menu_id,t.menu_name," +
					 " u.account,u.org_name,u.company_name " +					
					 " from SYS_LOG_MENU t " +
					 " left join V_SYS_USER_INFO u on u.id = t.create_user_id " +
					 " where 1=1 ";
		
		if(condition.containsKey("createUserName")){
			sql += " and t.create_user_name like ? ";
			condition.put("createUserName", "%" + condition.get("createUserName") + "%");
		}
		if(condition.containsKey("account")){
			sql += " and u.account like ? ";
			condition.put("account", "%" + condition.get("account") + "%");
		}		
		if(condition.containsKey("menuName")){
			sql += " and t.menu_name like ? ";
			condition.put("menuName", "%" + condition.get("menuName") + "%");
		}
		
		if(condition.containsKey("orgName")){
			sql += " and (u.org_name like '%"+condition.get("orgName")+"%' or u.company_name like '%"+condition.get("orgName")+"%') ";
			condition.remove("orgName");
		}
		
		//权限控制
		sql = userBizDataAuthzService.buildUserBizDataAuthzUserSql(sql, "t.create_user_id", condition.getCurrentUser());
		
		sql += " order by t.create_time desc ";
		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	} 
	
	/**
	 * 删除日志
	 * @param ids
	 * @param type
	 */
	public void removeLog(String [] ids, String type){
		if(ids.length > 0){
			String tableName = this.getTableNameByType(type);		
			String [] sqls = new String[ids.length];
			for(int i=0; i<ids.length; i++){
				sqls[i] = "delete from " + tableName + " where id = '"+ids[i]+"' ";			
			}		
			jdbcAssistant.batchUpdate(sqls);
		}
		
	}
	
	/**
	 * 清空日志
	 * @param type
	 */
	public void clearLog(String type){
		String tableName = this.getTableNameByType(type);		
		String sql = "truncate Table " + tableName;
		jdbcAssistant.update(sql);
	}
	
	/**
	 * 根据日志类型获取表名	
	 * @param type
	 * @return
	 */
	private String getTableNameByType(String type){
		if(type.equals("sys")){
			return "SYS_LOG";
		}else if(type.equals("error")){
			return "SYS_LOG_ERROR";
		}else if(type.equals("menu")){
			return "SYS_LOG_MENU";
		}
		return null;
	}
	
	/**
	 * 添加菜单访问日志
	 * @param resourcePath
	 * @param request
	 */
	public void addMenuLog(String resourcePath, HttpServletRequest request){
		Map<String, Object> menu = menuRepository.loadMenuByResourcePath(resourcePath);
		if(menu != null){
			CurrentUser user = UserSession.getCurrentUser(request);
			String sql = "insert into sys_log_menu "+
					  	 "(id, create_user_id, create_user_name, create_time, ip, menu_id, menu_name) "+
					  	 "values "+
					  	 "(?, ?, ?, ?, ?, ?, ?)";
			jdbcAssistant.update(sql, new Object[]{TextUtil.getUUID(), user.getId(), user.getName(),
					new Date(), TextUtil.getIpAddr(request), menu.get("id").toString(), menu.get("name").toString()});
		}
	}
	
}
