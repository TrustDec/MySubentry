package com.insplatform.module.weekly.controller;

import java.util.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.insframework.system.base.controller.BaseController;
import com.insframework.system.context.App;
import com.insframework.system.map.Condition;
import com.insplatform.module.weekly.model.Weekly;
import com.insplatform.module.weekly.service.WeeklyService;

@Controller
@RequestMapping("/px/weekly")
public class WeeklyController extends BaseController{
	
	@Autowired
	private WeeklyService weeklyService;
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllGrid")
	public @ResponseBody Map<String, Object> loadAllGrid(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request,"pxClassReport","name","uploadTime");
		return weeklyService.loadAllGrid(condition);
	}
	
	/**
	 * 加载数据
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/loadAllList")
	public @ResponseBody Map<String, Object> loadAllList(
			HttpServletRequest request, HttpServletResponse response){
		Condition condition = this.getCondition(request);
		return this.getMessager().success().data(weeklyService.loadAllList(condition));
	}	
	
	
	/**
	 * 加载单条数据
	 * @param id
	 * @return
	 */
	@RequestMapping("/load")
	public @ResponseBody Map<String, Object> load(@RequestParam("id") String id){		
		return this.getMessager().success().data(weeklyService.load(id));		
	}
	
	/**
	 * 新增
	 * @param dict
	 * @return
	 */
	@RequestMapping("/add")	
	public @ResponseBody Map<String, Object> add(Weekly weekly, HttpServletRequest request){
		weekly.setCreateUserId(this.getCurrentUser(request).getId());
		weekly.setCreateUserName(this.getCurrentUser(request).getName());
		Date date = new Date();
		weekly.setCreateTime(date);
		weekly.setUpdateTime(date);
		weeklyService.save(weekly,request);
		return this.getMessager().success();
	}
	
	/**
	 * 编辑
	 * @param dict
	 * @return
	 */
	@RequestMapping("/update")	
	public @ResponseBody Map<String, Object> update(
		   @RequestParam("id") String id,
		   HttpServletRequest request){
		Weekly weekly = weeklyService.get(id);
		this.bindObject(request, weekly);
		weekly.setUpdateTime(new Date());
		weeklyService.update(weekly,request);
		return this.getMessager().success();
	}
	
	/**
	 * 删除
	 * @param request
	 * @return
	 */
	@RequestMapping("/delete")	
	public @ResponseBody Map<String, Object> delete(HttpServletRequest request){
		String [] ids = this.getSelectedItems(request);
		weeklyService.deleteByIds(ids);
		return this.getMessager().success();
	}

	
	/**
	 * 查询所有班级信息
	 * @param request
	 * @return
	 */
	@RequestMapping("/loadAllClassesInfo")	
	public @ResponseBody Map<String, Object> loadAllClassesInfo(HttpServletRequest request){
		Condition condition = this.getCondition(request,"name","pxYear","pxMonth","SelectPxProject");
		return weeklyService.loadAllClassesInfo(condition);
	}
	
	/**
	 * 下载视频文件
	 * @param id
	 * @param response
	 */
	@RequestMapping("/downloadWeekly")	
	public void downloadVideo(@RequestParam("id") String id, HttpServletResponse response){
		Weekly weekly = weeklyService.get(id);
		String url = weekly.getWeekly();
		String path = App.FILE_SYS;
		path += url.replace(App.FILE_SYS_URL, "");
		downloadService.downloadFile(path, weekly.getOriginalName(), response);
	}
	
}
