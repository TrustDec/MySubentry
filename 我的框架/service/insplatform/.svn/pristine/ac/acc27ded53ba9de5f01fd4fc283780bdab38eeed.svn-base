package com.insplatform.module.osta.register.notice.service.impl;

import java.io.Serializable;
import java.util.*;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;

import com.insplatform.module.osta.register.notice.model.OstaRegWorktypeCost;
import com.insplatform.module.osta.register.notice.repository.OstaRegWorktypeCostRepository;
import com.insplatform.module.osta.register.notice.service.OstaRegWorktypeCostService;

@Service
public class OstaRegWorktypeCostServiceImpl extends BaseServiceImpl<OstaRegWorktypeCost> implements OstaRegWorktypeCostService{
	
	@Autowired
	private OstaRegWorktypeCostRepository ostaRegWorktypeCostRepository;

	@Override
	public BaseRepository<OstaRegWorktypeCost> getRepository() {		
		return ostaRegWorktypeCostRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return ostaRegWorktypeCostRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return ostaRegWorktypeCostRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return ostaRegWorktypeCostRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public OstaRegWorktypeCost get(Serializable id) {		
		return ostaRegWorktypeCostRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(OstaRegWorktypeCost entity) {	
		return ostaRegWorktypeCostRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(OstaRegWorktypeCost entity) {		
		ostaRegWorktypeCostRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		ostaRegWorktypeCostRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		ostaRegWorktypeCostRepository.deleteByIds(ids);
	}

	@Override
	public List<Map<String, Object>> loadAllListByThreeId(Condition condition) {
		String noticeId = condition.get("noticeId")+"";
		String worktypeId = condition.get("worktypeId")+"";
		String worktypeLevelId = condition.get("worktypeLevelId")+"";
		return ostaRegWorktypeCostRepository.loadAllListByThreeId(noticeId,worktypeId,worktypeLevelId);
	}

}
