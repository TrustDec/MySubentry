package com.insplatform.module.teachassessmentstu.repository.impl;

import java.io.Serializable;
import java.util.*;

import org.springframework.stereotype.Repository;

import com.insframework.common.spring.jdbc.mapper.ValueMapper;
import com.insframework.common.utils.TextUtil;
import com.insframework.system.base.repository.impl.BaseRepositoryImpl;

import com.insframework.system.map.Condition;
import com.insplatform.module.teachassessmentstu.model.TeachassessmentStu;
import com.insplatform.module.teachassessmentstu.repository.TeachassessmentStuRepository;


@Repository
public class TeachassessmentStuRepositoryImpl extends BaseRepositoryImpl<TeachassessmentStu> implements TeachassessmentStuRepository{

	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {
		String sql = " select (case  when a.course is null then   a.coursename  else  (select tt.title from PX_COURSE tt  where tt.id = a.course)  end) as coursename,  "
                    +" a.id,  a.stat_time, a.stop_time,  a.px_class_report, b.px_content,b.px_year,b.px_month, b.name,  f.name proname,b.px_organization  "
                    +" from PX_CLASS_CURRICULUM a,  PX_CLASS_REPORT     b,  px_project          f,   "
                    +" ( select b.id from px_class_report_user a ,px_class_report b where a.px_class_repor=b.id and a.userid='"+condition.getCurrentUser().getId()+"' and a.state='审批通过' ) z  "
                    +" where f.id = b.px_project  and b.id = a.px_class_report  and b.state = '审批通过'  and z.id=b.id  and a.stop_time < sysdate  order by a.stat_time asc ,a.stop_time desc  ";
		return gridService.loadData(condition.getGridTransModel(), sql,
				condition.valueArray(), new ValueMapper() {
					@Override
					public RETURN_CODE map(Map<String, Object> record)
							throws Exception {
						String sql = "select us.name from PX_CLASS_CURRICULUM_TEACHER t,PX_TEACHER te,SYS_USER us where t.teacher_id=te.user_id and te.user_id=us.id and t.px_class_curriculum='"
								+ record.get("id") + "'";
						List<Map<String, Object>> list = jdbcAssistant
								.query(sql);
						String name = "";
						for (Map<String, Object> map : list) {
							name += map.get("name").toString() + ",";
						}
						if (TextUtil.isNotEmpty(name)) {
							name = name.substring(0, name.lastIndexOf(","));
						}
						record.put("teacherListName", name);
						return RETURN_CODE.NEXT;
					}
				});
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {	
		String sql = "select t.* from PX_TEACHASSESSMENT_STU t ";
		return jdbcAssistant.query(sql, condition.valueArray());
	}
	
	@Override
	public Map<String, Object> load(String id) {	
		String sql = "select t.* from PX_TEACHASSESSMENT_STU t where t.id = ? ";
		return jdbcAssistant.queryOne(sql, new Object[]{id});
	}

	@Override
	public Map<String, Object> loadAllTeacherGrid(Condition condition,String id) {
		String sql = " select z.tid,z.px_year,z.px_month,z.cname,z.tname,z.sex,z.org_name,z.company_name,h.id as hid from  ( select q.tid,q.px_year,q.px_month,q.name cname,b.name as tname,b.sex,b.org_name,b.company_name from  ( select  * "
                    +"  from ( select (case  when a.course is null then   a.coursename  else  (select tt.title from PX_COURSE tt  where tt.id = a.course)  end) as coursename, "
                    +"  a.id,  a.stat_time, a.stop_time,  a.px_class_report, b.px_content,b.px_year,b.px_month, b.name,  f.name proname,b.px_organization "
                    +"  from PX_CLASS_CURRICULUM a,  PX_CLASS_REPORT     b,  px_project          f, "
                    +"  ( select b.id from px_class_report_user a ,px_class_report b where a.px_class_repor=b.id and a.userid='"+condition.getCurrentUser().getId()+"' and a.state='审批通过' ) z "
                    +"  where f.id = b.px_project  and b.id = a.px_class_report  and b.state = '审批通过'  and z.id=b.id  and a.stop_time < sysdate  order by a.stat_time asc ,a.stop_time desc "
                    +"  ) d  left join (select id as tid, teacher_id, px_class_curriculum  from PX_CLASS_CURRICULUM_TEACHER) e  on d.id = e.px_class_curriculum "
                    +"  where 1 = 1 and e.px_class_curriculum ='"+id+"' order by d.stat_time asc, d.stop_time desc ) q  ,v_sys_user_info b where q.teacher_id=b.id )z  left join px_teachassessment_stu h on h.tclass_id =z.tid ";

		return gridService.loadData(condition.getGridTransModel(), sql, condition.valueArray());
	}

	
	/**
	 * 重写父类get方法
	 */
	@Override
	public TeachassessmentStu get(Serializable id) {		
		return super.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(TeachassessmentStu entity) {	
		return super.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(TeachassessmentStu entity) {		
		super.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		super.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		super.deleteByIds(ids);
	}
	
}
