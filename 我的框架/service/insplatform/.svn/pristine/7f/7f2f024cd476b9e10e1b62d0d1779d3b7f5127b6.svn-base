package com.insplatform.system.dict.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.system.dict.model.Dict;
import com.insplatform.system.dict.repository.DictRepository;
import com.insplatform.system.dict.service.DictService;

@Service
public class DictServiceImpl extends BaseServiceImpl<Dict> implements DictService{
	
	@Autowired
	private DictRepository dictRepository;

	@Override
	public BaseRepository<Dict> getRepository() {		
		return dictRepository;
	}
	
	@Override
	public Map<String, Object> loadAll(Condition condition) {			
		return dictRepository.loadAll(condition);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public Dict get(Serializable id) {		
		return dictRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(Dict entity) {	
		return dictRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(Dict entity) {		
		dictRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		dictRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		dictRepository.deleteByIds(ids);
	}

	@Override
	public List<Map<String, Object>> loadDictByClassify(String code) {
		return dictRepository.loadDictByClassify(code, null);
	}
	
	@Override
	public List<Map<String, Object>> loadDictByClassify(String code, String valueEqText) {
		return dictRepository.loadDictByClassify(code, valueEqText);
	}

}
