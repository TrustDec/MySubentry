package com.insplatform.module.course.coursekpointresource.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.insframework.system.base.repository.BaseRepository;
import com.insframework.system.base.service.impl.BaseServiceImpl;
import com.insframework.system.map.Condition;
import com.insplatform.module.course.coursekpointresource.model.CourseKpointResource;
import com.insplatform.module.course.coursekpointresource.repository.CourseKpointResourceRepository;
import com.insplatform.module.course.coursekpointresource.service.CourseKpointResourceService;

@Service
public class CourseKpointResourceServiceImpl extends BaseServiceImpl<CourseKpointResource> implements CourseKpointResourceService{
	
	@Autowired
	private CourseKpointResourceRepository courseKpointResourceRepository;

	@Override
	public BaseRepository<CourseKpointResource> getRepository() {		
		return courseKpointResourceRepository;
	}
	
	@Override
	public Map<String, Object> loadAllGrid(Condition condition) {			
		return courseKpointResourceRepository.loadAllGrid(condition);
	}
	
	@Override
	public List<Map<String, Object>> loadAllList(Condition condition) {			
		return courseKpointResourceRepository.loadAllList(condition);
	}
	
	@Override
	public Map<String, Object> load(String id) {			
		return courseKpointResourceRepository.load(id);
	}
	
	/**
	 * 重写父类get方法
	 */
	@Override
	public CourseKpointResource get(Serializable id) {		
		return courseKpointResourceRepository.get(id);
	}
	
	/**
	 * 重写父类save方法
	 */
	@Override
	public Serializable save(CourseKpointResource entity) {	
		return courseKpointResourceRepository.save(entity);
	}
	
	/**
	 * 重写父类update方法
	 */
	@Override
	public void update(CourseKpointResource entity) {		
		courseKpointResourceRepository.update(entity);
	}
	
	/**
	 * 重写父类deleteById方法
	 */
	@Override
	public void deleteById(Serializable id) {		
		courseKpointResourceRepository.deleteById(id);
	}
	
	/**
	 * 重写父类deleteByIds方法
	 */
	@Override
	public void deleteByIds(String... ids) {		
		courseKpointResourceRepository.deleteByIds(ids);
	}

	@Override
	public void deleteByIds(String courseKpointId, String[] ids) {
		courseKpointResourceRepository.deleteByIds(courseKpointId, ids);
	}

	@Override
	public Map<String, Object> loadAllGridBySelect(Condition condition) {
		return courseKpointResourceRepository.loadAllGridBySelect(condition);
	}

	public void updateKpointUpOrDown(String resourceId, String courseKpointId, String type) {
		courseKpointResourceRepository.kpointUpOrDown(resourceId, courseKpointId, type);
	}

	@Override
	public void saveBatch(String courseKpointId, String[] ids) {
		courseKpointResourceRepository.batchSave(courseKpointId, ids);
	}


}
